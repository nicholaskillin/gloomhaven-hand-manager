{"version":3,"sources":["serviceWorker.js","CharacterSelection.js","HandSelection.js","PerkSelection.js","CardContainer.js","components/playArea/ModifierDeck.js","components/playArea/ChosenCards.js","components/playArea/HandCards.js","components/playArea/PlayerStats.js","PlayArea.js","App.js","webpack:///./src/index.js?b635"],"names":["Boolean","window","location","hostname","match","CharacterContainer","character","characterName","handleStaffOfCommand","selectCharacter","id","name","onClick","className","src","initials","alt","noSpoilerName","type","onChange","e","target","checked","align","CharacterSelection","availableCharacters","changeGame","game","handleSetCharacter","handleSetLevel","level","useState","setCharacterName","bladeSwarmUnlocked","setBladeSwarmUnlocked","cookies","Cookies","push","require","firstRow","slice","secondRow","thirdRow","fourthRow","fifthRow","sixthRow","useEffect","cookieInfo","getAll","parseInt","action","alert","style","color","event","handleGameChange","value","map","key","disabled","title","CardTableRowLevelOne","cardIsInHand","handleCardClick","cardSet","handleEnhancementChange","card","enhancements","enhancement","EnhancementIcon","index","EnhancementDropdown","CardTableRowTwoLevels","firstCardSet","firstLevel","secondCardSet","secondLevel","length","enhancementOption","SelectedHand","hand","toLowerCase","top","left","HandSelection","addCardToHand","campaign","handleUpdateCharacter","handleSetStage","removeCardFromHand","setCampaign","cards","startingCards","levelTwoCards","filter","levelThreeCards","levelFourCards","levelFiveCards","levelSixCards","levelSevenCards","levelEightCards","levelNineCards","cardToCheck","some","cardTitle","updatedData","find","selectedCard","_","includes","previousSibling","firstChild","cardFromCharacter","handSize","fontSize","for","campaignValue","set","path","maxAge","PerkSelection","modifyModifierDeck","characterPerks","resetModifierDeck","isChecked","perks","setPerk","changesToModifierDeck","setChangesToModifierDeck","cookie","handlePerkChange","perkId","checkboxId","prevPerks","newPerks","changes","perk","newChangesToModifierDeck","forEach","change","remove","modifierChanges","perkData","checkboxes","checkbox","label","cardsToAdd","formattedCardsToAdd","i","number","image","cardsToRemove","formattedCardsToRemove","handleConfirmPerks","CardContainer","cardClass","containerClass","cardSelected","mustLose","tracker","trackerButtons","setTrackerButtons","active","newTrackerButtons","handleClickTracker","ModifierModal","handleClose","playedModifierCards","show","display","textAlign","ModifierDeck","modifierDeck","playedModifyCards","setPlayedModifyCards","localModifierDeck","setLocalModifierDeck","mustShuffle","setMustShuffle","extraBlessCount","setExtraBlessCount","extraCurseCount","setExtraCurseCount","extraMinusOneCount","setExtraMinusOneCount","displayModal","setDisplayModal","minus1Card","curseCard","blessingCard","newLocalModifierDeck","playedCard","shift","handleFlipModifier","addPlayedCards","shuffledModifierDeck","playedMinusBlessCurseMinusOne","j","Math","floor","random","temp","handleShuffleModifierDeck","handleAddBless","handleAddCurse","handleAddMinusOneCard","cardIndex","findIndex","splice","handleRemoveMinusOneCard","handleResetModifierDeck","newModDeck","handleRemoveAllCurseCards","ChosenCards","chosenCards","moveCardToActive","moveCardToDiscard","moveCardToLost","returnChosenCardsToHand","staffOfCommand","setSelectedCard","cardClicked","cardToSelect","colSpan","border","Object","keys","HandCards","moveHandCardToLost","moveCardsToChosen","moveThirdCardToChosen","hasCardsInPlay","staffOfCommandPlayed","rowOne","rowTwo","rowThree","selectedCards","setSelectedCards","handleOnClick","characterCard","newSelection","PlayerStats","poisoned","setPoisoned","wounded","setWounded","immobilized","setImmobilized","disarmed","setDisarmed","regenerate","setRegenerate","stunned","setStunned","muddled","setMuddled","invisible","setInvisible","strengthened","setStrengthened","bearPoisoned","setBearPoisoned","bearWounded","setBearWounded","bearImmobilized","setBearImmobilized","bearDisarmed","setBearDisarmed","bearRegenerate","setBearRegenerate","bearStunned","setBearStunned","bearMuddled","setBearMuddled","bearInvisible","setBearInvisible","bearStrengthened","setBearStrengthened","health","setHealth","bearHealth","setBearHealth","experience","setExperience","loot","setLoot","maxHealth","maxBearHealth","DiscardedCards","discardedCards","handleMoveCardsBackToHand","moveDiscardedCardsToLost","removeCardFromDiscard","resting","setResting","canRerollLost","setCanRerollLost","longResting","setLongResting","cardToLose","setCardToLose","cardBoarder","handleShortRest","cardsToChooseFrom","newCardToLose","handleRerollLostCard","ActiveCards","activeCards","moveActiveCardToDiscard","moveActiveCardToLost","tagName","LostCards","lostCards","moveLostCardToHand","SettingsMenu","setPlayerStats","StackView","Text","CheckboxCard","PlayArea","setHand","setHasCardsInPlay","setChosenCards","setDiscardedCards","setActiveCards","setLostCards","showPlayerStats","setShowPlayerStats","anyChosenCardsLeft","newArray","Image","showStats","cardActivated","indexOf","newChosenCards","cardDiscarded","cardLost","newHand","chosenCard","newActiveCards","cardsRecovered","resetHand","newDiscardedCards","newLostCards","newHandCards","handCard","Feedback","FeedbackModal","hideModal","setTitle","setType","body","setBody","submitted","setSubmitted","submissionError","setSubmissionError","showErrors","setShowErrors","octokit","Octokit","auth","process","REACT_APP_GITHUB_KEY","ThemeProvider","spacing","Field","inline","helpContent","Input","Select","emptyValue","tooltip","Option","TextArea","height","placeholder","Button","issues","create","owner","repo","labels","catch","err","href","App","stage","setStage","setGame","setCharacter","setLevel","setModifierDeck","setStaffOfCommand","allCharacterData","gameName","getGameCharacters","characterSelected","characterData","x","campaignVersions","isEmpty","get","selected","newModifierDeck","concat","modifierWithCardsRemoved","array","attr","findWithAttr","cardToAdd","cardReceived","cardToRemove","previousHand","reject","Bugsnag","start","apiKey","enabledReleaseStages","plugins","BugsnagPluginReact","onError","addMetadata","ErrorBoundary","getPlugin","createErrorBoundary","React","ReactDOM","render","StrictMode","FallbackComponent","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.dd5289ff.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useEffect, useState } from 'react'\n\nimport Cookies from 'universal-cookie'\nimport Konami from 'react-konami-code'\n\nfunction CharacterSelection({\n  availableCharacters,\n  changeGame,\n  game,\n  handleSetCharacter,\n  handleSetLevel,\n  handleStaffOfCommand,\n  level,\n}) {\n  const [characterName, setCharacterName] = useState('')\n  const [bladeSwarmUnlocked, setBladeSwarmUnlocked] = useState(false)\n  const cookies = new Cookies()\n  if (bladeSwarmUnlocked) {\n    availableCharacters.push(require('./envelopeX.json'))\n  }\n  const firstRow = availableCharacters.slice(0, 3)\n  const secondRow = availableCharacters.slice(3, 6)\n  const thirdRow = availableCharacters.slice(6, 9)\n  const fourthRow = availableCharacters.slice(9, 12)\n  const fifthRow = availableCharacters.slice(12, 15)\n  const sixthRow = availableCharacters.slice(15, 18)\n\n  useEffect(() => {\n    let cookieInfo = cookies.getAll()\n    if (cookieInfo.character) {\n      selectCharacter(cookieInfo.character)\n    }\n    if (cookieInfo.level) {\n      handleSetLevel(parseInt(cookieInfo.level, 10))\n    }\n  }, [])\n\n  function selectCharacter(characterName) {\n    setCharacterName(characterName)\n  }\n\n  function handleUnlockBladeSwarm() {\n    setBladeSwarmUnlocked(true)\n    alert(`You unlocked bladeswarm`)\n  }\n\n  function handleGameChange(game) {\n    setCharacterName('')\n    changeGame(game)\n  }\n\n  return (\n    <>\n      <Konami action={handleUnlockBladeSwarm} />\n      <div id='select-className-section' align='center'>\n        <h2 className='header' align='center' style={{ color: 'white' }}>\n          Select Your Character\n        </h2>\n        <select\n          onChange={(event) => handleGameChange(event.target.value)}\n          id='game-selector'\n          value={game}\n        >\n          <option value='gloomhaven'>Gloomhaven</option>\n          <option value='forgottenCircles'>Forgotten Circles</option>\n          <option value='jotl'>Jaws of the Lion</option>\n        </select>\n        <table>\n          <tbody>\n            <tr>\n              {firstRow.map((character) => (\n                <CharacterContainer\n                  character={character}\n                  characterName={characterName}\n                  handleStaffOfCommand={handleStaffOfCommand}\n                  key={character.noSpoilerName}\n                  selectCharacter={selectCharacter}\n                />\n              ))}\n            </tr>\n            <tr>\n              {secondRow.map((character) => (\n                <CharacterContainer\n                  character={character}\n                  characterName={characterName}\n                  handleStaffOfCommand={handleStaffOfCommand}\n                  key={character.noSpoilerName}\n                  selectCharacter={selectCharacter}\n                />\n              ))}\n            </tr>\n            <tr>\n              {thirdRow.map((character) => (\n                <CharacterContainer\n                  character={character}\n                  characterName={characterName}\n                  handleStaffOfCommand={handleStaffOfCommand}\n                  key={character.noSpoilerName}\n                  selectCharacter={selectCharacter}\n                />\n              ))}\n            </tr>\n            <tr>\n              {fourthRow.map((character) => (\n                <CharacterContainer\n                  character={character}\n                  characterName={characterName}\n                  handleStaffOfCommand={handleStaffOfCommand}\n                  key={character.noSpoilerName}\n                  selectCharacter={selectCharacter}\n                />\n              ))}\n            </tr>\n            <tr>\n              {fifthRow.map((character) => (\n                <CharacterContainer\n                  character={character}\n                  characterName={characterName}\n                  handleStaffOfCommand={handleStaffOfCommand}\n                  key={character.noSpoilerName}\n                  selectCharacter={selectCharacter}\n                />\n              ))}\n            </tr>\n            <tr>\n              {sixthRow.map((character) => (\n                <CharacterContainer\n                  character={character}\n                  characterName={characterName}\n                  handleStaffOfCommand={handleStaffOfCommand}\n                  key={character.noSpoilerName}\n                  selectCharacter={selectCharacter}\n                />\n              ))}\n            </tr>\n          </tbody>\n        </table>\n        <div id='level-selection' align='center'>\n          <h2 className='header' align='center' style={{ color: 'white' }}>\n            Select Your Level\n          </h2>\n          <p id='level-counter'>Level: {level}</p>\n          <br />\n          <button\n            id='level-down'\n            className='level-modifier'\n            type='button'\n            onClick={() => handleSetLevel(level - 1)}\n            disabled={level < 2}\n          >\n            -\n          </button>\n          <button\n            id='level-up'\n            className='level-modifier'\n            type='button'\n            onClick={() => handleSetLevel(level + 1)}\n            disabled={level > 8 || characterName === ''}\n          >\n            +\n          </button>\n          <br />\n        </div>\n        <br />\n        <button\n          id='confirm-character-button'\n          className='button'\n          type='button'\n          align='center'\n          title='Must Select A Character'\n          onClick={() => handleSetCharacter(characterName)}\n          disabled={characterName === ''}\n        >\n          Confirm Character\n        </button>\n      </div>\n    </>\n  )\n}\n\nfunction CharacterContainer({\n  character,\n  characterName,\n  handleStaffOfCommand,\n  selectCharacter,\n}) {\n  return (\n    <td\n      id={character.name === 'beastTyrant' ? 'beastTyrantOption' : ''}\n      onClick={() => selectCharacter(character.name)}\n    >\n      <img\n        className={\n          characterName === character.name\n            ? 'character active character-selected'\n            : 'character active'\n        }\n        src={`./images/character-icons/${character.initials}-icon.png`}\n        alt={character.noSpoilerName}\n      />\n      <br />\n      {character.name === 'beastTyrant' && (\n        <div>\n          <div\n            id='beastTyrantStaffLabel'\n            className={\n              characterName === 'beastTyrant' ? 'solo-scenario-label' : 'hiding'\n            }\n          >\n            Completed solo scenario\n          </div>\n          <label className='switch'>\n            <input\n              id='beastTyrantSolo'\n              type='checkbox'\n              onChange={(e) => handleStaffOfCommand(e.target.checked)}\n            />\n            <span\n              id='beastTyrantStaff'\n              className={\n                characterName === 'beastTyrant' ? 'slider' : 'slider hiding'\n              }\n            />\n          </label>\n        </div>\n      )}\n      <p className='character-title' align='center'>\n        {character.noSpoilerName}\n      </p>\n    </td>\n  )\n}\n\nexport default CharacterSelection\n","import React from 'react'\nimport Cookies from 'universal-cookie'\nimport _ from 'lodash'\n\nfunction HandSelection({\n  addCardToHand,\n  campaign,\n  character,\n  game,\n  level,\n  hand,\n  handleUpdateCharacter,\n  handleSetStage,\n  removeCardFromHand,\n  setCampaign,\n}) {\n  // TODO: move cards over to use the CardContainer component\n  const firstRow = character.cards.slice(0, 5)\n  const secondRow = character.cards.slice(5, 10)\n  const thirdRow = character.cards.slice(10, character.startingCards)\n  const levelTwoCards = character.cards.filter((card) => {\n    return card.level === 2\n  })\n  const levelThreeCards = character.cards.filter((card) => {\n    return card.level === 3\n  })\n  const levelFourCards = character.cards.filter((card) => {\n    return card.level === 4\n  })\n  const levelFiveCards = character.cards.filter((card) => {\n    return card.level === 5\n  })\n  const levelSixCards = character.cards.filter((card) => {\n    return card.level === 6\n  })\n  const levelSevenCards = character.cards.filter((card) => {\n    return card.level === 7\n  })\n  const levelEightCards = character.cards.filter((card) => {\n    return card.level === 8\n  })\n  const levelNineCards = character.cards.filter((card) => {\n    return card.level === 9\n  })\n  const cookies = new Cookies()\n\n  function cardIsInHand(cardToCheck) {\n    if (hand.some((card) => card.title === cardToCheck.title)) {\n      return true\n    }\n    return false\n  }\n\n  function handleEnhancementChange(cardTitle, id, e) {\n    let updatedData = { ...character }\n    const card = updatedData.cards.find((card) => card.title === cardTitle)\n    let enhancement = card.enhancements.find(\n      (enhancement) => enhancement.id === id\n    )\n    enhancement.enhancement = e.target.value\n    handleUpdateCharacter(updatedData)\n  }\n\n  function handleCardClick(selectedCard) {\n    if (_.includes(selectedCard.alt, 'halt-back')) return\n\n    while (selectedCard.className === 'enhancement-icon') {\n      selectedCard = selectedCard.previousSibling\n    }\n    if (selectedCard.className === 'chooseCardsTable') {\n      selectedCard = selectedCard.firstChild\n    }\n    let cardFromCharacter = character.cards.find(\n      (card) => card.title === selectedCard.alt\n    )\n    if (cardIsInHand(cardFromCharacter)) {\n      removeCardFromHand(cardFromCharacter)\n    } else {\n      if (hand.length < character.handSize) {\n        addCardToHand(cardFromCharacter)\n      } else {\n        alert(`Your hand is full`)\n      }\n    }\n  }\n\n  function handleConfirmHand() {\n    handleSetStage('playing')\n    cookies.set('hand', hand, {\n      path: '/',\n      maxAge: 31104000,\n    })\n  }\n\n  const handleCampaignChange = (campaignValue) => {\n    setCampaign(campaignValue)\n  }\n\n  return (\n    <div id='initial-table' className='cardSet'>\n      <h2 id='choose-cards-number' className='header'>\n        Choose {character.handSize} Cards\n      </h2>\n      <div align='center' style={{ fontSize: '.7em' }}>\n        {game === 'jotl' && (\n          <>\n            <label for='campaign'>Choose a campaign:</label>\n\n            <select\n              id='campaign'\n              name='campaign'\n              onChange={(e) => handleCampaignChange(parseInt(e.target.value))}\n              value={campaign}\n            >\n              <option value='1'>1</option>\n              <option value='2'>2</option>\n              <option value='3'>3</option>\n              <option value='4'>4+</option>\n            </select>\n          </>\n        )}\n        <p id='card-counter' className='card-counter' align='center'>\n          {hand.length}/{character.handSize}\n        </p>\n      </div>\n      <table className='cardTable' align='center'>\n        <tbody>\n          <CardTableRowLevelOne\n            cardIsInHand={cardIsInHand}\n            handleCardClick={handleCardClick}\n            cardSet={firstRow}\n            character={character}\n            handleEnhancementChange={handleEnhancementChange}\n          />\n          <CardTableRowLevelOne\n            cardIsInHand={cardIsInHand}\n            handleCardClick={handleCardClick}\n            cardSet={secondRow}\n            character={character}\n            handleEnhancementChange={handleEnhancementChange}\n          />\n          {thirdRow.length > 0 && (\n            <CardTableRowLevelOne\n              cardIsInHand={cardIsInHand}\n              handleCardClick={handleCardClick}\n              cardSet={thirdRow}\n              character={character}\n              handleEnhancementChange={handleEnhancementChange}\n            />\n          )}\n\n          {level >= 2 && (\n            <CardTableRowTwoLevels\n              cardIsInHand={cardIsInHand}\n              handleCardClick={handleCardClick}\n              character={character}\n              handleEnhancementChange={handleEnhancementChange}\n              firstCardSet={levelTwoCards}\n              firstLevel={2}\n              level={level}\n              secondCardSet={levelThreeCards}\n              secondLevel={3}\n            />\n          )}\n          {level >= 4 && (\n            <CardTableRowTwoLevels\n              cardIsInHand={cardIsInHand}\n              handleCardClick={handleCardClick}\n              character={character}\n              handleEnhancementChange={handleEnhancementChange}\n              firstCardSet={levelFourCards}\n              firstLevel={4}\n              level={level}\n              secondCardSet={levelFiveCards}\n              secondLevel={5}\n            />\n          )}\n          {level >= 6 && (\n            <CardTableRowTwoLevels\n              cardIsInHand={cardIsInHand}\n              handleCardClick={handleCardClick}\n              character={character}\n              handleEnhancementChange={handleEnhancementChange}\n              firstCardSet={levelSixCards}\n              firstLevel={6}\n              level={level}\n              secondCardSet={levelSevenCards}\n              secondLevel={7}\n            />\n          )}\n          {level >= 8 && (\n            <CardTableRowTwoLevels\n              cardIsInHand={cardIsInHand}\n              handleCardClick={handleCardClick}\n              character={character}\n              handleEnhancementChange={handleEnhancementChange}\n              firstCardSet={levelEightCards}\n              firstLevel={8}\n              level={level}\n              secondCardSet={levelNineCards}\n              secondLevel={9}\n            />\n          )}\n        </tbody>\n      </table>\n      <div>\n        <SelectedHand character={character} hand={hand} />\n      </div>\n      <div align='center'>\n        <button\n          className='button'\n          type='button'\n          onClick={() => handleSetStage('selectPerks')}\n        >\n          Go Back To Perks\n        </button>\n        <button\n          className='button'\n          type='button'\n          title='Must Have a Full Hand'\n          onClick={handleConfirmHand}\n          disabled={hand.length < character.handSize}\n        >\n          Confirm Hand\n        </button>\n      </div>\n    </div>\n  )\n}\n\nfunction CardTableRowLevelOne({\n  cardIsInHand,\n  handleCardClick,\n  cardSet,\n  character,\n  handleEnhancementChange,\n}) {\n  return (\n    <>\n      <tr>\n        <td className='level'>Level 1:</td>\n        {cardSet.map((card) => {\n          return (\n            <td\n              key={card.title}\n              className='chooseCardsTable'\n              onClick={(e) => handleCardClick(e.target)}\n            >\n              <img\n                src={`./images/character-ability-cards/${character.initials}/${card.title}.png`}\n                className={\n                  cardIsInHand(card) ? 'chooseCards add-border' : 'chooseCards'\n                }\n                alt={card.title}\n              />\n              {card.enhancements.map((enhancement) => (\n                <EnhancementIcon\n                  key={enhancement.id}\n                  enhancement={enhancement}\n                />\n              ))}\n            </td>\n          )\n        })}\n      </tr>\n      <tr>\n        <td className='enhancement-label' />\n        {cardSet.map((card) => {\n          return (\n            <td key={`${card.title}-Enhancements`} className='enhancement'>\n              {card.enhancements.map((enhancement, index) => {\n                return (\n                  <EnhancementDropdown\n                    card={card}\n                    enhancement={enhancement}\n                    handleEnhancementChange={handleEnhancementChange}\n                    key={`${card.title}-${index}`}\n                  />\n                )\n              })}\n            </td>\n          )\n        })}\n      </tr>\n    </>\n  )\n}\n\nfunction CardTableRowTwoLevels({\n  cardIsInHand,\n  handleCardClick,\n  character,\n  handleEnhancementChange,\n  firstCardSet,\n  firstLevel,\n  level,\n  secondCardSet,\n  secondLevel,\n}) {\n  return (\n    <>\n      <tr>\n        {firstCardSet.length > 0 && (\n          <>\n            <td className='level'>Level {firstLevel}:</td>\n            {firstCardSet.map((card) => {\n              return (\n                <td\n                  key={card.title}\n                  className='chooseCardsTable'\n                  onClick={(e) => handleCardClick(e.target)}\n                >\n                  <img\n                    src={`./images/character-ability-cards/${character.initials}/${card.title}.png`}\n                    className={\n                      cardIsInHand(card)\n                        ? 'chooseCards add-border'\n                        : 'chooseCards'\n                    }\n                    alt={card.title}\n                  />\n                  {card.enhancements.map((enhancement) => (\n                    <EnhancementIcon\n                      key={enhancement.id}\n                      enhancement={enhancement}\n                    />\n                  ))}\n                </td>\n              )\n            })}\n          </>\n        )}\n\n        {level >= secondLevel && secondCardSet.length > 0 && (\n          <>\n            <td className='level'>Level {secondLevel}:</td>\n            {secondCardSet.map((card) => {\n              return (\n                <td\n                  key={card.title}\n                  className='chooseCardsTable'\n                  onClick={(e) => handleCardClick(e.target)}\n                >\n                  <img\n                    src={`./images/character-ability-cards/${character.initials}/${card.title}.png`}\n                    className={\n                      cardIsInHand(card)\n                        ? 'chooseCards add-border'\n                        : 'chooseCards'\n                    }\n                    alt={card.title}\n                  />\n                  {card.enhancements.map((enhancement) => (\n                    <EnhancementIcon\n                      key={enhancement.id}\n                      enhancement={enhancement}\n                    />\n                  ))}\n                </td>\n              )\n            })}\n          </>\n        )}\n      </tr>\n      <tr>\n        <td className='enhancement-label' />\n        {firstCardSet.map((card) => {\n          return (\n            <td key={`${card.title}-Enhancements`} className='enhancement'>\n              {card.enhancements.map((enhancement, index) => {\n                return (\n                  <EnhancementDropdown\n                    card={card}\n                    enhancement={enhancement}\n                    handleEnhancementChange={handleEnhancementChange}\n                    key={`${card.title}-${index}`}\n                  />\n                )\n              })}\n            </td>\n          )\n        })}\n        {level >= secondLevel && (\n          <>\n            <td className='enhancement-label' />\n            {secondCardSet.map((card) => {\n              return (\n                <td key={`${card.title}-Enhancements`} className='enhancement'>\n                  {card.enhancements.map((enhancement, index) => {\n                    return (\n                      <EnhancementDropdown\n                        card={card}\n                        enhancement={enhancement}\n                        handleEnhancementChange={handleEnhancementChange}\n                        key={`${card.title}-${index}`}\n                      />\n                    )\n                  })}\n                </td>\n              )\n            })}\n          </>\n        )}\n      </tr>\n    </>\n  )\n}\n\nfunction EnhancementDropdown({ card, enhancement, handleEnhancementChange }) {\n  const enhancementOptions = [\n    '+1',\n    'Leap',\n    'Wind',\n    'Ice',\n    'Fire',\n    'Leaf',\n    'Sun',\n    'Moon',\n    'Wild Element',\n    'Bless',\n    'Curse',\n    'Disarm',\n    'Immobilize',\n    'Wound',\n    'Muddle',\n    'Poison',\n    'Strengthen',\n    'Area',\n  ]\n\n  return (\n    <div className='enhancement-row'>\n      <label className='enhancement'>Enhancement:</label>\n      <select\n        onChange={(e) => handleEnhancementChange(card.title, enhancement.id, e)}\n      >\n        <option value=''>None</option>\n        {enhancementOptions.map((enhancementOption) => {\n          return (\n            <option key={enhancementOption} value={enhancementOption}>\n              {enhancementOption}\n            </option>\n          )\n        })}\n      </select>\n    </div>\n  )\n}\n\nfunction SelectedHand({ character, hand }) {\n  const firstRow = hand.slice(0, 4)\n  const secondRow = hand.slice(4, 8)\n  const thirdRow = hand.slice(8, 12)\n  return (\n    <table align='center'>\n      <tbody>\n        <tr>\n          {firstRow.map((card) => {\n            return (\n              <td key={card.title} className='hand'>\n                <img\n                  src={`./images/character-ability-cards/${character.initials}/${card.title}.png`}\n                  className='chooseCards'\n                  alt={card.title}\n                />\n                {card.enhancements.map((enhancement) => (\n                  <EnhancementIcon\n                    key={enhancement.id}\n                    enhancement={enhancement}\n                  />\n                ))}\n              </td>\n            )\n          })}\n        </tr>\n        <tr>\n          {secondRow.map((card) => {\n            return (\n              <td key={card.title} className='hand'>\n                <img\n                  src={`./images/character-ability-cards/${character.initials}/${card.title}.png`}\n                  className='chooseCards'\n                  alt={card.title}\n                />\n                {card.enhancements.map((enhancement) => (\n                  <EnhancementIcon\n                    key={enhancement.id}\n                    enhancement={enhancement}\n                  />\n                ))}\n              </td>\n            )\n          })}\n        </tr>\n        <tr>\n          {thirdRow.map((card) => {\n            return (\n              <td key={card.title} className='hand'>\n                <img\n                  src={`./images/character-ability-cards/${character.initials}/${card.title}.png`}\n                  className='chooseCards'\n                  alt={card.title}\n                />\n                {card.enhancements.map((enhancement) => (\n                  <EnhancementIcon\n                    key={enhancement.id}\n                    enhancement={enhancement}\n                  />\n                ))}\n              </td>\n            )\n          })}\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n\nfunction EnhancementIcon({ enhancement }) {\n  return (\n    <>\n      {enhancement.enhancement !== '' && (\n        <img\n          className='enhancement-icon'\n          src={`./images/enhancements/${enhancement.enhancement.toLowerCase()}.png`}\n          style={{ top: enhancement.top, left: enhancement.left }}\n          alt={`Enhancement Name`}\n        />\n      )}\n    </>\n  )\n}\n\nexport default HandSelection\n","import React, { useState, useEffect } from 'react'\nimport _ from 'lodash'\nimport Cookies from 'universal-cookie'\n// TODO: How do I persist what perks have been selected if someone navigates away and comes back?\n\nfunction PerkSelection({\n  modifyModifierDeck,\n  character,\n  characterPerks,\n  handleSetStage,\n  resetModifierDeck,\n}) {\n  const [perks, setPerk] = useState([\n    {\n      id: 1,\n      isChecked: false,\n    },\n    {\n      id: 2,\n      isChecked: false,\n    },\n    {\n      id: 3,\n      isChecked: false,\n    },\n    {\n      id: 4,\n      isChecked: false,\n    },\n    {\n      id: 5,\n      isChecked: false,\n    },\n    {\n      id: 6,\n      isChecked: false,\n    },\n    {\n      id: 7,\n      isChecked: false,\n    },\n    {\n      id: 8,\n      isChecked: false,\n    },\n    {\n      id: 9,\n      isChecked: false,\n    },\n    {\n      id: 10,\n      isChecked: false,\n    },\n    {\n      id: 11,\n      isChecked: false,\n    },\n    {\n      id: 12,\n      isChecked: false,\n    },\n    {\n      id: 13,\n      isChecked: false,\n    },\n    {\n      id: 14,\n      isChecked: false,\n    },\n    {\n      id: 15,\n      isChecked: false,\n    },\n  ])\n  const [changesToModifierDeck, setChangesToModifierDeck] = useState([])\n  const cookie = new Cookies()\n\n  useEffect(() => {\n    resetModifierDeck()\n    let cookieInfo = cookie.getAll()\n    if (cookieInfo.perks) {\n      setPerk(cookieInfo.perks)\n    }\n    if (cookieInfo.modifierChanges) {\n      setChangesToModifierDeck(cookieInfo.modifierChanges)\n    }\n  }, [])\n\n  function handlePerkChange(perkId, checkboxId, value) {\n    // Update value of perk in state\n    setPerk((prevPerks) => {\n      let newPerks = [...prevPerks]\n      newPerks[checkboxId].isChecked = value\n      return newPerks\n    })\n\n    // Find changes needed to Attack Modifier based on this perk\n    let changes = characterPerks.find((perk) => perk.id === perkId).changes\n\n    // Add or remove the changes for this perk from state, which is used in handleConfirmPerks()\n    if (value === true) {\n      setChangesToModifierDeck([...changesToModifierDeck, ...changes])\n    } else {\n      let newChangesToModifierDeck = [...changesToModifierDeck]\n      changes.forEach((change) => {\n        _.remove(newChangesToModifierDeck, change)\n      })\n      setChangesToModifierDeck(newChangesToModifierDeck)\n    }\n  }\n\n  function handleConfirmPerks() {\n    // Add perks to cookie\n    cookie.set('perks', perks, {\n      path: '/',\n      maxAge: 31104000,\n    })\n\n    cookie.set('modifierChanges', changesToModifierDeck, {\n      path: '/',\n      maxAge: 31104000,\n    })\n\n    // TODO: Got each function working independantly, but they don't work together. Need to combine these two functions into a single function and rework it.\n    // Adding cards to the modifier deck\n    let cardsToAdd = _.filter(changesToModifierDeck, { action: 'add' })\n    let formattedCardsToAdd = []\n    cardsToAdd.forEach((card) => {\n      for (let i = 0; i < card.number; i++) {\n        formattedCardsToAdd.push({\n          name: card.cardTitle,\n          image: `./images/attack-modifiers/${character.initials}/am-${character.initials}-${card.cardTitle}.png`,\n        })\n      }\n    })\n\n    // Removing cards from the modifier deck\n    let cardsToRemove = _.filter(changesToModifierDeck, { action: 'remove' })\n    // Send array of formatted card names to remove\n    let formattedCardsToRemove = []\n    cardsToRemove.forEach((card) => {\n      for (let i = 0; i < card.number; i++) {\n        formattedCardsToRemove.push({ name: card.cardTitle })\n      }\n    })\n    modifyModifierDeck(formattedCardsToRemove, formattedCardsToAdd)\n    handleSetStage('selectHand')\n  }\n\n  return (\n    <>\n      <div id='perk-section' align='center'>\n        <h2 id='perks-header' className='header'>\n          Select Your Perks\n        </h2>\n        <div className='perks'>\n          {characterPerks.map((perkData) => (\n            <div key={perkData.id}>\n              {perkData.checkboxes.map((checkbox) => (\n                <div\n                  key={checkbox.id}\n                  className={\n                    perks[checkbox.id].isChecked\n                      ? 'checkbox checked'\n                      : 'checkbox'\n                  }\n                  onClick={\n                    perks[checkbox.id].isChecked\n                      ? () => handlePerkChange(perkData.id, checkbox.id, false)\n                      : () => handlePerkChange(perkData.id, checkbox.id, true)\n                  }\n                />\n              ))}\n              <p>{perkData.label}</p>\n            </div>\n          ))}\n          <button\n            id='confirmPerksButton'\n            className='button'\n            type='button'\n            onClick={() => handleConfirmPerks()}\n          >\n            Confirm Perks\n          </button>\n        </div>\n        <button\n          className='button'\n          type='button'\n          onClick={() => handleSetStage('selectCharacter')}\n        >\n          Go Back To Character Select\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default PerkSelection\n","import React, { useState } from 'react'\n\nfunction CardContainer({\n  card,\n  cardClass = '',\n  containerClass,\n  cardSelected,\n  character,\n  mustLose,\n  onClick,\n}) {\n  const [trackerButtons, setTrackerButtons] = useState(card.tracker)\n\n  function handleClickTracker(i) {\n    let newTrackerButtons = [...trackerButtons]\n    newTrackerButtons[i].active = !newTrackerButtons[i].active\n    setTrackerButtons(newTrackerButtons)\n  }\n  return (\n    <td\n      key={card.title}\n      className={containerClass}\n      onClick={(e) => onClick(e.target)}\n    >\n      <img\n        src={`./images/character-ability-cards/${character.initials}/${card.title}.png`}\n        className={\n          cardSelected(card) ? `new-add-border ${cardClass}` : `${cardClass}`\n        }\n        alt={card.title}\n      />\n      {card.enhancements.map((enhancement) => (\n        <EnhancementIcon key={enhancement.id} enhancement={enhancement} />\n      ))}\n      {mustLose && <p>Must Lose</p>}\n      {containerClass === 'active-card' && card.tracker.length > 0 && (\n        <>\n          <br />\n          {card.tracker.map((tracker, i) => (\n            <button\n              disabled={!trackerButtons[i].active}\n              onClick={() => handleClickTracker(i)}\n            >\n              {i + 1}\n            </button>\n          ))}\n        </>\n      )}\n    </td>\n  )\n}\n\nfunction EnhancementIcon({ enhancement }) {\n  return (\n    <>\n      {enhancement.enhancement !== '' && (\n        <img\n          className=\"enhancement-icon\"\n          src={`./images/enhancements/${enhancement.enhancement.toLowerCase()}.png`}\n          style={{ top: enhancement.top, left: enhancement.left }}\n          alt={`Enhancement Name`}\n        />\n      )}\n    </>\n  )\n}\n\nexport default CardContainer\n","import React, {useState} from 'react'\n\nimport _ from 'lodash'\n\nfunction ModifierDeck({ modifierDeck }) {\n  const [playedModifyCards, setPlayedModifyCards] = useState([])\n  const [localModifierDeck, setLocalModifierDeck] = useState(modifierDeck)\n  const [mustShuffle, setMustShuffle] = useState(false)\n  const [extraBlessCount, setExtraBlessCount] = useState(0)\n  const [extraCurseCount, setExtraCurseCount] = useState(0)\n  const [extraMinusOneCount, setExtraMinusOneCount] = useState(0)\n  const [displayModal, setDisplayModal] = useState(false)\n\n  const minus1Card = {\n    name: 'extraMinus1',\n    image: './images/attack-modifiers/base/player-mod/am-pm-minus1.png',\n  }\n  const curseCard = {\n    name: 'extraCurse',\n    image: './images/attack-modifiers/base/player-mod/am-pm-curse.png',\n  }\n  const blessingCard = {\n    name: 'extraBless',\n    image: './images/attack-modifiers/base/player-mod/am-pm-bless.png',\n  }\n\n  function handleFlipModifier() {\n    let newLocalModifierDeck = [...localModifierDeck]\n    setPlayedModifyCards([...playedModifyCards, newLocalModifierDeck[0]])\n    let playedCard = newLocalModifierDeck.shift()\n    setLocalModifierDeck(newLocalModifierDeck)\n    if (playedCard.name === 'times2' || playedCard.name === 'miss') {\n      setMustShuffle(true)\n    } else if (playedCard.name === 'extraBless') {\n      setExtraBlessCount(extraBlessCount - 1)\n    } else if (playedCard.name === 'extraCurse') {\n      setExtraCurseCount(extraCurseCount - 1)\n    }\n  }\n\n  function handleShuffleModifierDeck(addPlayedCards) {\n    let shuffledModifierDeck = []\n    if (addPlayedCards) {\n      let playedMinusBlessCurseMinusOne = [...playedModifyCards]\n      _.remove(playedMinusBlessCurseMinusOne, blessingCard)\n      _.remove(playedMinusBlessCurseMinusOne, curseCard)\n      _.remove(playedMinusBlessCurseMinusOne, minus1Card)\n      shuffledModifierDeck = [\n        ...localModifierDeck,\n        ...playedMinusBlessCurseMinusOne,\n      ]\n      setPlayedModifyCards([])\n      setMustShuffle(false)\n    } else {\n      shuffledModifierDeck = [...localModifierDeck]\n    }\n    for (let i = shuffledModifierDeck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i)\n      const temp = shuffledModifierDeck[i]\n      shuffledModifierDeck[i] = shuffledModifierDeck[j]\n      shuffledModifierDeck[j] = temp\n    }\n    setLocalModifierDeck(shuffledModifierDeck)\n  }\n\n  function handleAddBless() {\n    if (extraBlessCount < 10) {\n      let newLocalModifierDeck = [...localModifierDeck, blessingCard]\n      // When I had it shuffle once, the bless was always the last card. Suffling twice fixes this, but there is likely a better way to do this.\n      for (let i = newLocalModifierDeck.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * i)\n        const temp = newLocalModifierDeck[i]\n        newLocalModifierDeck[i] = newLocalModifierDeck[j]\n        newLocalModifierDeck[j] = temp\n      }\n      for (let i = newLocalModifierDeck.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * i)\n        const temp = newLocalModifierDeck[i]\n        newLocalModifierDeck[i] = newLocalModifierDeck[j]\n        newLocalModifierDeck[j] = temp\n      }\n      setLocalModifierDeck(newLocalModifierDeck)\n      setExtraBlessCount(extraBlessCount + 1)\n    }\n  }\n\n  function handleAddCurse() {\n    if (extraCurseCount < 10) {\n      let newLocalModifierDeck = [...localModifierDeck, curseCard]\n      // When I had it shuffle once, the bless was always the last card. Suffling twice fixes this, but there is likely a better way to do this.\n      for (let i = newLocalModifierDeck.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * i)\n        const temp = newLocalModifierDeck[i]\n        newLocalModifierDeck[i] = newLocalModifierDeck[j]\n        newLocalModifierDeck[j] = temp\n      }\n      for (let i = newLocalModifierDeck.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * i)\n        const temp = newLocalModifierDeck[i]\n        newLocalModifierDeck[i] = newLocalModifierDeck[j]\n        newLocalModifierDeck[j] = temp\n      }\n      setLocalModifierDeck(newLocalModifierDeck)\n      setExtraCurseCount(extraCurseCount + 1)\n    }\n  }\n\n  function handleAddMinusOneCard() {\n    let newLocalModifierDeck = [...localModifierDeck, minus1Card]\n    // When I had it shuffle once, the bless was always the last card. Suffling twice fixes this, but there is likely a better way to do this.\n    for (let i = newLocalModifierDeck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i)\n      const temp = newLocalModifierDeck[i]\n      newLocalModifierDeck[i] = newLocalModifierDeck[j]\n      newLocalModifierDeck[j] = temp\n    }\n    for (let i = newLocalModifierDeck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i)\n      const temp = newLocalModifierDeck[i]\n      newLocalModifierDeck[i] = newLocalModifierDeck[j]\n      newLocalModifierDeck[j] = temp\n    }\n    setExtraMinusOneCount(extraMinusOneCount + 1)\n    setLocalModifierDeck(newLocalModifierDeck)\n  }\n\n  function handleRemoveMinusOneCard() {\n    if (extraMinusOneCount > 0) {\n      let newLocalModifierDeck = [...localModifierDeck]\n      let cardIndex = _.findIndex(newLocalModifierDeck, minus1Card)\n      newLocalModifierDeck.splice(cardIndex, 1)\n      setLocalModifierDeck(newLocalModifierDeck)\n      setExtraMinusOneCount(extraMinusOneCount - 1)\n    }\n  }\n\n  function handleResetModifierDeck() {\n    let newLocalModifierDeck = [...localModifierDeck, ...playedModifyCards]\n    // Probably a better way to do this...\n    _.remove(newLocalModifierDeck, minus1Card)\n    _.remove(newLocalModifierDeck, curseCard)\n    _.remove(newLocalModifierDeck, blessingCard)\n    setLocalModifierDeck(newLocalModifierDeck)\n    setPlayedModifyCards([])\n    setExtraCurseCount(0)\n    setExtraBlessCount(0)\n  }\n\n  function showModal() {\n    setDisplayModal(true)\n  }\n\n  function hideModal() {\n    setDisplayModal(false)\n  }\n\n  function handleRemoveAllCurseCards() {\n    let newModDeck = [...localModifierDeck]\n    _.remove(newModDeck, curseCard)\n    setLocalModifierDeck(newModDeck)\n    setExtraCurseCount(0)\n  }\n\n  return (\n    <div id=\"attack-modifier-deck\" align=\"center\">\n      {mustShuffle && (\n        <h2 id=\"mustShuffle\" style={{ color: 'red' }}>\n          Must Shuffle At End of Turn\n        </h2>\n      )}\n      <h2 id=\"cardsInDeck\" style={{ color: 'white' }}>\n        Cards in Deck:{` ${localModifierDeck.length}`}\n      </h2>\n      <h6 id=\"blessesInDeck\" style={{ color: 'white' }}>\n        Extra Blesses in deck: {extraBlessCount}\n      </h6>\n      <h6 id=\"cursesInDeck\" style={{ color: 'white' }}>\n        Extra Curses in deck: {extraCurseCount}\n      </h6>\n      <h6 id=\"cursesInDeck\" style={{ color: 'white' }}>\n        Extra -1 cards in deck: {extraMinusOneCount}\n      </h6>\n      {localModifierDeck.length > 0 && (\n        <img\n          alt=\"Attack Modifier Deck\"\n          id=\"amDeck\"\n          className=\"attack-modifier\"\n          onClick={() => handleFlipModifier()}\n          src=\"./images/modifier-deck/cardBack.png\"\n        />\n      )}\n      {playedModifyCards.length > 0 && (\n        <img\n          alt=\"Played Modifiers\"\n          id=\"playedModifiers\"\n          className=\"attack-modifier\"\n          onClick={() => showModal()}\n          src={playedModifyCards[playedModifyCards.length - 1].image}\n        />\n      )}\n      <br />\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={() => handleShuffleModifierDeck(true)}\n      >\n        Shuffle Modifiers\n      </button>\n      <br />\n      <button className=\"button\" type=\"button\" onClick={() => handleAddBless()}>\n        Bless\n      </button>\n      <button className=\"button\" type=\"button\" onClick={() => handleAddCurse()}>\n        Curse\n      </button>\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={() => handleAddMinusOneCard()}\n      >\n        Add -1 Card\n      </button>\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={() => handleRemoveMinusOneCard()}\n      >\n        Remove -1 card\n      </button>\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={() => handleResetModifierDeck()}\n      >\n        Reset Modifier Deck\n      </button>\n      <button\n        className=\"button\"\n        type=\"button\"\n        onClick={() => handleRemoveAllCurseCards()}\n      >\n        Remove all curse cards\n      </button>\n      <ModifierModal\n        handleClose={hideModal}\n        playedModifierCards={playedModifyCards}\n        show={displayModal}\n      />\n    </div>\n  )\n}\n\nfunction ModifierModal({ handleClose, playedModifierCards, show }) {\n  const style = show ? { display: 'block' } : { display: 'none' }\n  return (\n    <div id=\"zoomModal\" style={style}>\n      <div id=\"zoomContent\">\n        <h2 style={{ color: 'black', textAlign: 'center' }}>\n          Played Modifiers\n        </h2>\n        <span className=\"close\" onClick={handleClose}>\n          &times;\n        </span>\n        <div id=\"used-modifier-cards\">\n          {playedModifierCards.map((card, index) => (\n            <img alt={card.title} src={card.image} key={index} />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ModifierDeck\n","import React, {useState} from 'react'\n\nimport CardContainer from '../../CardContainer'\nimport ModifierDeck from './ModifierDeck'\n\nfunction ChosenCards({\n  character,\n  chosenCards,\n  modifierDeck,\n  moveCardToActive,\n  moveCardToDiscard,\n  moveCardToLost,\n  returnChosenCardsToHand,\n  staffOfCommand,\n}) {\n  const [selectedCard, setSelectedCard] = useState({})\n\n  function cardSelected(card) {\n    if (selectedCard === card) {\n      return true\n    }\n    return false\n  }\n\n  function noCardsPlayed() {\n    return (Object.keys(chosenCards[0]).length === 0 || Object.keys(chosenCards[1]).length === 0) ? true : false\n  }\n\n  function handleCardClick(cardClicked) {\n    while (cardClicked.className === 'enhancement-icon') {\n      cardClicked = cardClicked.previousSibling\n    }\n    if (\n      cardClicked.className === 'hand' ||\n      cardClicked.className === 'card-in-play'\n    ) {\n      cardClicked = cardClicked.firstChild\n    }\n    let cardToSelect = character.cards.find(\n      (card) => card.title === cardClicked.alt\n    )\n    cardToSelect === selectedCard\n      ? setSelectedCard({})\n      : setSelectedCard(cardToSelect)\n  }\n\n  function handleDiscardChosenCard() {\n    moveCardToDiscard(selectedCard)\n    setSelectedCard({})\n  }\n\n  function handleLostChosenCard() {\n    moveCardToLost(selectedCard)\n    setSelectedCard({})\n  }\n\n  function handleActivateChosenCard() {\n    moveCardToActive(selectedCard)\n    setSelectedCard({})\n  }\n\n  return (\n    <td\n      className=\"chosen-cards-title\"\n      colSpan=\"2\"\n      style={{ border: '1px solid white', textAlign: 'center' }}\n    >\n      Chosen Cards\n      <br />\n      <table align=\"center\">\n        <tbody>\n          <tr>\n            {Object.keys(chosenCards[0]).length === 0 ? (\n              <td id=\"chosen-card-1\" className=\"card-in-play\">\n                <img\n                  alt=\"Chosen Card 1\"\n                  src={`./images/character-ability-cards/${character.initials}/${character.initials}-back.png`}\n                  className=\"card\"\n                />\n              </td>\n            ) : (\n              <CardContainer\n                card={chosenCards[0]}\n                cardClass={'chooseCards'}\n                containerClass={'card-in-play'}\n                cardSelected={cardSelected}\n                character={character}\n                onClick={handleCardClick}\n              />\n            )}\n            {Object.keys(chosenCards[1]).length === 0 ? (\n              <td id=\"chosen-card-2\" className=\"card-in-play\">\n                <img\n                  alt=\"Chosen Card 1\"\n                  src={`./images/character-ability-cards/${character.initials}/${character.initials}-back.png`}\n                  className=\"card\"\n                />\n              </td>\n            ) : (\n              <CardContainer\n                card={chosenCards[1]}\n                cardClass={'chooseCards'}\n                containerClass={'card-in-play'}\n                cardSelected={cardSelected}\n                character={character}\n                onClick={handleCardClick}\n              />\n            )}\n            {staffOfCommand && Object.keys(chosenCards[2]).length === 0 && (\n              <td id=\"chosen-card-3\" className=\"card-in-play\">\n                <img\n                  alt=\"Chosen Card 1\"\n                  src={`./images/character-ability-cards/${character.initials}/${character.initials}-back.png`}\n                  className=\"card\"\n                />\n              </td>\n            )}\n            {staffOfCommand && Object.keys(chosenCards[2]).length !== 0 && (\n              <CardContainer\n                card={chosenCards[2]}\n                cardClass={'chooseCards'}\n                containerClass={'card-in-play'}\n                cardSelected={cardSelected}\n                character={character}\n                onClick={handleCardClick}\n              />\n            )}\n          </tr>\n        </tbody>\n      </table>\n      <div>\n        <br />\n        <button\n          id=\"discard-button\"\n          className=\"button tooltip\"\n          disabled={Object.keys(selectedCard).length === 0}\n          type=\"button\"\n          title=\"Must Have a Card In Play Selected\"\n          onClick={() => handleDiscardChosenCard()}\n        >\n          Discard Card\n        </button>\n        <button\n          id=\"lose-button\"\n          className=\"button tooltip\"\n          disabled={Object.keys(selectedCard).length === 0}\n          onClick={() => handleLostChosenCard()}\n          type=\"button\"\n          title=\"Must Have a Card In Play Selected\"\n        >\n          Lose Card\n        </button>\n        <button\n          id=\"activate-button\"\n          className=\"button tooltip\"\n          disabled={Object.keys(selectedCard).length === 0}\n          onClick={() => handleActivateChosenCard()}\n          type=\"button\"\n          title=\"Must Have a Card In Play Selected\"\n        >\n          Move Card to Active\n        </button>\n        <button \n          className=\"button tooltip\" \n          disabled={noCardsPlayed()}\n          onClick={() => returnChosenCardsToHand()}\n          title=\"Select New Cards\"\n        >\n          Select New Cards\n        </button>\n        \n      </div>\n      <ModifierDeck modifierDeck={modifierDeck} />\n    </td>\n  )\n}\n\nexport default ChosenCards\n","import React, {useState} from 'react'\n\nimport CardContainer from '../../CardContainer'\nimport _ from 'lodash'\n\nfunction HandCards({\n  character,\n  hand,\n  moveHandCardToLost,\n  moveCardsToChosen,\n  moveThirdCardToChosen,\n  hasCardsInPlay,\n  staffOfCommand,\n  staffOfCommandPlayed\n}) {\n  const rowOne = hand.slice(0, 4)\n  const rowTwo = hand.slice(4, 8)\n  const rowThree = hand.slice(8, 12)\n\n  const [selectedCards, setSelectedCards] = useState([])\n\n  function handleOnClick(cardClicked) {\n    while (cardClicked.className === 'enhancement-icon') {\n      cardClicked = cardClicked.previousSibling\n    }\n    if (cardClicked.className === 'hand') {\n      cardClicked = cardClicked.firstChild\n    }\n    let characterCard = character.cards.find(\n      (card) => card.title === cardClicked.alt\n    )\n    if (selectedCards.some((card) => card.title === cardClicked.alt)) {\n      let newSelection = [...selectedCards]\n      _.remove(newSelection, characterCard)\n      setSelectedCards(newSelection)\n    } else {\n      if (selectedCards.length < 2) {\n        setSelectedCards([...selectedCards, characterCard])\n      } else {\n        let newSelection = [...selectedCards]\n        newSelection.shift()\n        newSelection.push(characterCard)\n        setSelectedCards(newSelection)\n      }\n    }\n  }\n\n  function cardSelected(cardClicked) {\n    if (selectedCards.some((card) => card.title === cardClicked.title)) {\n      return true\n    }\n    return false\n  }\n\n  function handlePlayCards() {\n    moveCardsToChosen(selectedCards)\n    setSelectedCards([])\n  }\n\n  function handlePlayStaffOfCommand() {\n    let cardToPlay = selectedCards\n    moveThirdCardToChosen(cardToPlay)\n    setSelectedCards([])\n  }\n\n  function handleLostCardToAvoidDamage() {\n    moveHandCardToLost(selectedCards[0])\n    setSelectedCards([])\n  }\n\n  return (\n    <>\n      <div id=\"hand-cards\">\n        <table align=\"center\">\n          <tbody>\n            <tr>\n              {rowOne.map((card) => (\n                <CardContainer\n                  key={card.title}\n                  card={card}\n                  containerClass=\"hand\"\n                  cardSelected={cardSelected}\n                  character={character}\n                  onClick={handleOnClick}\n                />\n              ))}\n            </tr>\n            <tr>\n              {rowTwo.map((card) => (\n                <CardContainer\n                  key={card.title}\n                  card={card}\n                  containerClass=\"hand\"\n                  cardSelected={cardSelected}\n                  character={character}\n                  onClick={handleOnClick}\n                />\n              ))}\n            </tr>\n            <tr>\n              {rowThree.map((card) => (\n                <CardContainer\n                  key={card.title}\n                  card={card}\n                  containerClass=\"hand\"\n                  cardSelected={cardSelected}\n                  character={character}\n                  onClick={handleOnClick}\n                />\n              ))}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div id=\"confirm-buttons\" align=\"center\">\n        <button\n          id=\"play-cards-button\"\n          className=\"button\"\n          disabled={selectedCards.length !== 2 || hasCardsInPlay}\n          type=\"button\"\n          title=\"Must Select 2 Cards, Not Have Any Cards In Play, And Not Be Resting\"\n          onClick={() => handlePlayCards()}\n        >\n          Play Cards\n        </button>\n        {staffOfCommand && (\n          <button\n            id=\"play-third-card\"\n            className=\"button\"\n            disabled={!hasCardsInPlay || selectedCards.length !== 1 || staffOfCommandPlayed}\n            onClick={() => handlePlayStaffOfCommand()}\n            type=\"button\"\n            title=\"Must Have Played Cards\"\n          >\n            Play third card with Staff of Command\n          </button>\n        )}\n        <button\n          id=\"lose-hand-card\"\n          className=\"button\"\n          disabled={selectedCards.length !== 1}\n          onClick={() => handleLostCardToAvoidDamage()}\n          type=\"button\"\n          title=\"Must Have One Card Selected\"\n        >\n          Lose Card To Avoid Damage\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default HandCards","import React, {useState} from 'react'\n\nfunction PlayerStats({ character, level }) {\n  // Character Status Effects\n  const [poisoned, setPoisoned] = useState(false)\n  const [wounded, setWounded] = useState(false)\n  const [immobilized, setImmobilized] = useState(false)\n  const [disarmed, setDisarmed] = useState(false)\n  const [regenerate, setRegenerate] = useState(false)\n  const [stunned, setStunned] = useState(false)\n  const [muddled, setMuddled] = useState(false)\n  const [invisible, setInvisible] = useState(false)\n  const [strengthened, setStrengthened] = useState(false)\n\n  // Bear Status Effects\n  const [bearPoisoned, setBearPoisoned] = useState(false)\n  const [bearWounded, setBearWounded] = useState(false)\n  const [bearImmobilized, setBearImmobilized] = useState(false)\n  const [bearDisarmed, setBearDisarmed] = useState(false)\n  const [bearRegenerate, setBearRegenerate] = useState(false)\n  const [bearStunned, setBearStunned] = useState(false)\n  const [bearMuddled, setBearMuddled] = useState(false)\n  const [bearInvisible, setBearInvisible] = useState(false)\n  const [bearStrengthened, setBearStrengthened] = useState(false)\n\n  // Health, Exeperience, and Loot\n  const [health, setHealth] = useState(character.health[level - 1])\n  const [bearHealth, setBearHealth] = useState(8 + level * 2)\n  const [experience, setExperience] = useState(0)\n  const [loot, setLoot] = useState(0)\n\n  const maxHealth = character.health[level - 1]\n  const maxBearHealth = 8 + level * 2\n\n  return (\n    <>\n      <table align=\"center\">\n        <tbody>\n          <tr>\n            <td id=\"status-effects\" align=\"center\" colSpan=\"4\">\n              Status Effects\n              <br />\n              {poisoned && (\n                <img\n                  id=\"poisoned\"\n                  className=\"status\"\n                  src=\"./images/status-effects/poisoned.png\"\n                  alt=\"Poisoned\"\n                />\n              )}\n              {wounded && (\n                <img\n                  id=\"wounded\"\n                  className=\"status\"\n                  src=\"./images/status-effects/wounded.png\"\n                  alt=\"Wounded\"\n                />\n              )}\n              {immobilized && (\n                <img\n                  id=\"immobilized\"\n                  className=\"status\"\n                  src=\"./images/status-effects/immobilized.png\"\n                  alt=\"Immobilized\"\n                />\n              )}\n              {disarmed && (\n                <img\n                  id=\"disarmed\"\n                  className=\"status\"\n                  src=\"./images/status-effects/disarmed.png\"\n                  alt=\"Disarmed\"\n                />\n              )}\n              <img\n                id=\"spacer\"\n                className=\"status\"\n                src=\"./images/status-effects/disarmed.png\"\n                alt=\"spacer\"\n              />\n              {regenerate && (\n                <img\n                  id=\"regenerate\"\n                  className=\"status\"\n                  src=\"./images/status-effects/regenerate.png\"\n                  alt=\"Regenerate\"\n                />\n              )}\n              <img\n                id=\"spacer\"\n                className=\"status\"\n                src=\"./images/status-effects/disarmed.png\"\n                alt=\"spacer\"\n              />\n              {stunned && (\n                <img\n                  id=\"stunned\"\n                  className=\"status\"\n                  src=\"./images/status-effects/stunned.png\"\n                  alt=\"Stunned\"\n                />\n              )}\n              {muddled && (\n                <img\n                  id=\"muddled\"\n                  className=\"status\"\n                  src=\"./images/status-effects/muddled.png\"\n                  alt=\"Muddled\"\n                />\n              )}\n              {invisible && (\n                <img\n                  id=\"invisible\"\n                  className=\"status\"\n                  src=\"./images/status-effects/invisible.png\"\n                  alt=\"Invisible\"\n                />\n              )}\n              {strengthened && (\n                <img\n                  id=\"strengthened\"\n                  className=\"status\"\n                  src=\"./images/status-effects/strengthen.png\"\n                  alt=\"Strengthened\"\n                />\n              )}\n              <br />\n              <button\n                id=\"toggle-poison\"\n                type=\"button\"\n                onClick={() => setPoisoned(!poisoned)}\n              >\n                Poisoned\n              </button>\n              <button\n                id=\"toggle-wounded\"\n                type=\"button\"\n                onClick={() => setWounded(!wounded)}\n              >\n                Wounded\n              </button>\n              <button\n                id=\"toggle-immobilized\"\n                type=\"button\"\n                onClick={() => setImmobilized(!immobilized)}\n              >\n                Immobilized\n              </button>\n              <button\n                id=\"toggle-disarmed\"\n                type=\"button\"\n                onClick={() => setDisarmed(!disarmed)}\n              >\n                Disarmed\n              </button>\n              <button\n                id=\"toggle-regenerate\"\n                type=\"button\"\n                onClick={() => setRegenerate(!regenerate)}\n              >\n                Regenerate\n              </button>\n              <button\n                id=\"toggle-stunned\"\n                type=\"button\"\n                onClick={() => setStunned(!stunned)}\n              >\n                Stunned\n              </button>\n              <button\n                id=\"toggle-muddled\"\n                type=\"button\"\n                onClick={() => setMuddled(!muddled)}\n              >\n                Muddled\n              </button>\n              <button\n                id=\"toggle-invisible\"\n                type=\"button\"\n                onClick={() => setInvisible(!invisible)}\n              >\n                Invisible\n              </button>\n              <button\n                id=\"toggle-strengthened\"\n                type=\"button\"\n                onClick={() => setStrengthened(!strengthened)}\n              >\n                Strengthened\n              </button>\n            </td>\n          </tr>\n          {character.name === 'beastTyrant' && (\n            <tr id=\"bear-status-effects\">\n              <td id=\"bear-effects\" align=\"center\" colSpan=\"4\">\n                Bear Status Effects\n                <br />\n                {bearPoisoned && (\n                  <img\n                    id=\"bear-poisoned\"\n                    className=\"status\"\n                    src=\"./images/status-effects/poisoned.png\"\n                    alt=\"Bear Poisoned\"\n                  />\n                )}\n                {bearWounded && (\n                  <img\n                    id=\"bear-wounded\"\n                    className=\"status\"\n                    src=\"./images/status-effects/wounded.png\"\n                    alt=\"Bear Wounded\"\n                  />\n                )}\n                {bearImmobilized && (\n                  <img\n                    id=\"bear-immobilized\"\n                    className=\"status\"\n                    src=\"./images/status-effects/immobilized.png\"\n                    alt=\"Bear Immobilized\"\n                  />\n                )}\n                {bearDisarmed && (\n                  <img\n                    id=\"bear-disarmed\"\n                    className=\"status\"\n                    src=\"./images/status-effects/disarmed.png\"\n                    alt=\"Bear Disarmed\"\n                  />\n                )}\n                <img\n                  id=\"bear-spacer\"\n                  className=\"status\"\n                  src=\"./images/status-effects/disarmed.png\"\n                  alt=\"Bear Spacer\"\n                />\n                {bearRegenerate && (\n                <img\n                  id=\"bear-regenerate\"\n                  className=\"status\"\n                  src=\"./images/status-effects/regenerate.png\"\n                  alt=\"Bear Regenerate\"\n                />\n              )}\n              <img\n                id=\"spacer\"\n                className=\"status\"\n                src=\"./images/status-effects/disarmed.png\"\n                alt=\"spacer\"\n              />\n                {bearStunned && (\n                  <img\n                    id=\"bear-stunned\"\n                    className=\"status\"\n                    src=\"./images/status-effects/stunned.png\"\n                    alt=\"Bear Stunned\"\n                  />\n                )}\n                {bearMuddled && (\n                  <img\n                    id=\"bear-muddled\"\n                    className=\"status\"\n                    src=\"./images/status-effects/muddled.png\"\n                    alt=\"Bear Muddled\"\n                  />\n                )}\n                {bearInvisible && (\n                  <img\n                    id=\"bear-invisible\"\n                    className=\"status\"\n                    src=\"./images/status-effects/invisible.png\"\n                    alt=\"Bear Invisible\"\n                  />\n                )}\n                {bearStrengthened && (\n                  <img\n                    id=\"bear-strengthened\"\n                    className=\"status\"\n                    src=\"./images/status-effects/strengthen.png\"\n                    alt=\"Bear Strengthened\"\n                  />\n                )}\n                <br />\n                <button\n                  id=\"toggle-bear-poison\"\n                  type=\"button\"\n                  onClick={() => setBearPoisoned(!bearPoisoned)}\n                >\n                  Bear Poisoned\n                </button>\n                <button\n                  id=\"toggle-bear-wounded\"\n                  type=\"button\"\n                  onClick={() => setBearWounded(!bearWounded)}\n                >\n                  Bear Wounded\n                </button>\n                <button\n                  id=\"toggle-bear-immobilized\"\n                  type=\"button\"\n                  onClick={() => setBearImmobilized(!bearImmobilized)}\n                >\n                  Bear Immobilized\n                </button>\n                <button\n                  id=\"toggle-bear-disarmed\"\n                  type=\"button\"\n                  onClick={() => setBearDisarmed(!bearDisarmed)}\n                >\n                  Bear Disarmed\n                </button>\n                <button\n                  id=\"toggle-bear-regenerate\"\n                  type=\"button\"\n                  onClick={() => setBearRegenerate(!bearRegenerate)}\n                >\n                  Bear Regenerate\n                </button>\n                <button\n                  id=\"toggle-bear-stunned\"\n                  type=\"button\"\n                  onClick={() => setBearStunned(!bearStunned)}\n                >\n                  Bear Stunned\n                </button>\n                <button\n                  id=\"toggle-bear-muddled\"\n                  type=\"button\"\n                  onClick={() => setBearMuddled(!bearMuddled)}\n                >\n                  Bear Muddled\n                </button>\n                <button\n                  id=\"toggle-bear-invisible\"\n                  type=\"button\"\n                  onClick={() => setBearInvisible(!bearInvisible)}\n                >\n                  Bear Invisible\n                </button>\n                <button\n                  id=\"toggle-bear-strengthened\"\n                  type=\"button\"\n                  onClick={() => setBearStrengthened(!bearStrengthened)}\n                >\n                  Bear Strengthened\n                </button>\n              </td>\n            </tr>\n          )}\n          <tr>\n            <td id=\"health\" align=\"center\" colSpan=\"1\">\n              <br />\n              <div id=\"character-health\">\n                Health\n                <p\n                  id=\"health-counter\"\n                  style={{ fontSize: '35px', color: 'red' }}\n                >\n                  {health}\n                </p>\n                <br />\n                <button\n                  id=\"damage\"\n                  type=\"button\"\n                  style={{ fontSize: '15px' }}\n                  disabled={health < 1}\n                  onClick={() => setHealth(health - 1)}\n                >\n                  -\n                </button>\n                <button\n                  disabled={health === maxHealth}\n                  id=\"heal\"\n                  type=\"button\"\n                  style={{ fontSize: '15px' }}\n                  title=\"If Poisoned, Heal Skills Must Remove Poison Instead of Increasing Health\"\n                  onClick={() => setHealth(health + 1)}\n                >\n                  +\n                </button>\n              </div>\n              {character.name === 'beastTyrant' && (\n                <div id=\"bear-health\">\n                  Bear Health\n                  <p\n                    id=\"bear-health-counter\"\n                    style={{ fontSize: '35px', color: 'red' }}\n                  >\n                    {bearHealth}\n                  </p>\n                  <br />\n                  <button\n                    disabled={bearHealth < 1}\n                    id=\"damage-bear\"\n                    type=\"button\"\n                    style={{ fontSize: '15px' }}\n                    onClick={() => setBearHealth(bearHealth - 1)}\n                  >\n                    -\n                  </button>\n                  <button\n                    disabled={bearHealth === maxBearHealth}\n                    id=\"heal-bear\"\n                    type=\"button\"\n                    style={{ fontSize: '15px' }}\n                    title=\"If Poisoned, Heal Skills Must Remove Poison Instead of Increasing Health\"\n                    onClick={() => setBearHealth(bearHealth + 1)}\n                  >\n                    +\n                  </button>\n                </div>\n              )}\n            </td>\n            <td id=\"xp\" align=\"center\" colSpan=\"1\">\n              Experience\n              <br />\n              <p id=\"xp-counter\" style={{ fontSize: '35px', color: 'cyan' }}>\n                {experience}\n              </p>\n              <br />\n              <button\n                disabled={experience < 1}\n                id=\"xp-down\"\n                type=\"button\"\n                style={{ fontSize: '15px' }}\n                onClick={() => setExperience(experience - 1)}\n              >\n                -\n              </button>\n              <button\n                id=\"xp-up\"\n                type=\"button\"\n                style={{ fontSize: '15px' }}\n                onClick={() => setExperience(experience + 1)}\n              >\n                +\n              </button>\n            </td>\n            <td id=\"loot\" align=\"center\" colSpan=\"1\">\n              Loot\n              <br />\n              <p id=\"loot-counter\" style={{ fontSize: '35px', color: 'gold' }}>\n                {loot}\n              </p>\n              <br />\n              <button\n                disabled={loot < 1}\n                id=\"loot-down\"\n                type=\"button\"\n                style={{ fontSize: '15px' }}\n                onClick={() => setLoot(loot - 1)}\n              >\n                -\n              </button>\n              <button\n                id=\"loot-up\"\n                type=\"button\"\n                style={{ fontSize: '15px' }}\n                onClick={() => setLoot(loot + 1)}\n              >\n                +\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  )\n}\n\nexport default PlayerStats","import { CheckboxCard, StackView, Text } from '@planning-center/ui-kit'\nimport React, { useEffect, useState } from 'react'\n\nimport CardContainer from './CardContainer'\nimport ChosenCards from './components/playArea/ChosenCards'\nimport HandCards from './components/playArea/HandCards'\nimport { slide as Menu } from 'react-burger-menu'\nimport PlayerStats from './components/playArea/PlayerStats'\nimport _ from 'lodash'\n\nfunction PlayArea({\n  character,\n  hand,\n  level,\n  modifierDeck,\n  setHand,\n  staffOfCommand,\n}) {\n  const [hasCardsInPlay, setHasCardsInPlay] = useState(false)\n  const [chosenCards, setChosenCards] = useState([{}, {}, {}])\n  const [discardedCards, setDiscardedCards] = useState([])\n  const [activeCards, setActiveCards] = useState([])\n  const [lostCards, setLostCards] = useState([])\n  const [showPlayerStats, setShowPlayerStats] = useState(false)\n\n  useEffect(() => {\n    modifierDeck.forEach((image) => {\n      const newImage = new Image()\n      newImage.src = image.image\n    })\n  }, [])\n\n  function anyChosenCardsLeft(newArray) {\n    let cardsStillInPlay = newArray.filter(\n      (value) => Object.keys(value).length !== 0\n    )\n    if (cardsStillInPlay.length > 0) {\n      return true\n    }\n    return false\n  }\n\n  function moveCardsToChosen(cards) {\n    // remove selected cards from hand\n    let newHand = [...hand]\n    cards.forEach((card) => {\n      _.remove(newHand, function(handCard) {\n        return handCard.title === card.title\n      })\n    })\n    setHand(newHand)\n\n    // add selected cards to ChosenCards component\n    let newChosenCards = [...chosenCards]\n    newChosenCards[0] = cards[0]\n    newChosenCards[1] = cards[1]\n    setChosenCards(newChosenCards)\n\n    setHasCardsInPlay(true)\n  }\n\n  function moveThirdCardToChosen(cards) {\n    // remove selected cards from hand\n    let newHand = [...hand]\n    cards.forEach((card) => {\n      _.remove(newHand, function(handCard) {\n        return handCard.title === card.title\n      })\n    })\n    setHand(newHand)\n\n    // add selected cards to ChosenCards component\n    let newChosenCards = [...chosenCards]\n    newChosenCards[2] = cards[0]\n    setChosenCards(newChosenCards)\n\n    setHasCardsInPlay(true)\n  }\n\n  function moveCardToDiscard(cardDiscarded) {\n    let i = _.indexOf(chosenCards, cardDiscarded)\n    let newChosenCards = [...chosenCards]\n    newChosenCards[i] = {}\n    setChosenCards(newChosenCards)\n    setDiscardedCards([...discardedCards, cardDiscarded])\n    if (!anyChosenCardsLeft(newChosenCards)) {\n      setHasCardsInPlay(false)\n    }\n  }\n\n  function moveDiscardedCardsToLost(cards, resetHand) {\n    setLostCards([...lostCards, ...cards])\n    let newDiscardedCards = [...discardedCards]\n    cards.forEach((card) => {\n      _.remove(newDiscardedCards, card)\n    })\n    if (resetHand) {\n      setHand([...hand, ...newDiscardedCards], setDiscardedCards([]))\n    } else {\n      setDiscardedCards(newDiscardedCards)\n    }\n  }\n\n  function moveActiveCardToDiscard(cardDiscarded) {\n    let newActiveCards = [...activeCards]\n    _.remove(newActiveCards, cardDiscarded)\n    setActiveCards(newActiveCards)\n    setDiscardedCards([...discardedCards, cardDiscarded])\n  }\n\n  function moveCardToLost(cardLost) {\n    let i = _.indexOf(chosenCards, cardLost)\n    let newChosenCards = [...chosenCards]\n    newChosenCards[i] = {}\n    setChosenCards(newChosenCards)\n    setLostCards([...lostCards, cardLost])\n    if (!anyChosenCardsLeft(newChosenCards)) {\n      setHasCardsInPlay(false)\n    }\n  }\n\n  function moveActiveCardToLost(cardLost) {\n    let newActiveCards = [...activeCards]\n    _.remove(newActiveCards, cardLost)\n    setActiveCards(newActiveCards)\n    setLostCards([...lostCards, cardLost])\n  }\n\n  function moveHandCardToLost(cardLost) {\n    let newHandCards = [...hand]\n    _.remove(newHandCards, cardLost)\n    setHand(newHandCards)\n    setLostCards([...lostCards, cardLost])\n  }\n\n  function moveCardToActive(cardActivated) {\n    let i = _.indexOf(chosenCards, cardActivated)\n    let newChosenCards = [...chosenCards]\n    newChosenCards[i] = {}\n    setChosenCards(newChosenCards)\n    setActiveCards([...activeCards, cardActivated])\n    if (!anyChosenCardsLeft(newChosenCards)) {\n      setHasCardsInPlay(false)\n    }\n  }\n\n  function handleMoveCardsBackToHand(cardsRecovered) {\n    setHand([...hand, ...cardsRecovered])\n  }\n\n  function removeCardFromDiscard(card) {\n    _.remove(discardedCards, card)\n  }\n\n  function moveLostCardToHand(card) {\n    setHand([...hand, card])\n    let newLostCards = [...lostCards]\n    _.remove(newLostCards, card)\n    setLostCards(newLostCards)\n  }\n\n  function handleUpdateShowPlayerStats(showStats) {\n    setShowPlayerStats(showStats)\n  }\n\n  function returnChosenCardsToHand() {\n    // remove selected cards from hand\n    let newHand = [...hand]\n    chosenCards.forEach((chosenCard) => {\n      if (Object.keys(chosenCard).length !== 0) {\n        newHand = [...newHand, chosenCard]\n      } \n    })\n    setHand(newHand)\n\n    // add selected cards to ChosenCards component\n    setChosenCards([{}, {}, {}])\n    setHasCardsInPlay(false)\n  }\n\n  return (\n    <>\n      <Menu>\n        <SettingsMenu setPlayerStats={handleUpdateShowPlayerStats} />\n      </Menu>\n      <div id=\"play-game\" align=\"center\">\n        <table id=\"play-area\" align=\"center\">\n          <tbody>\n            <tr>\n              <ChosenCards\n                character={character}\n                chosenCards={chosenCards}\n                modifierDeck={modifierDeck}\n                moveCardToActive={moveCardToActive}\n                moveCardToDiscard={moveCardToDiscard}\n                moveCardToLost={moveCardToLost}\n                returnChosenCardsToHand={returnChosenCardsToHand}\n                staffOfCommand={staffOfCommand}\n              />\n              <ActiveCards\n                character={character}\n                activeCards={activeCards}\n                moveActiveCardToDiscard={moveActiveCardToDiscard}\n                moveActiveCardToLost={moveActiveCardToLost}\n              />\n            </tr>\n            <tr>\n              <DiscardedCards\n                character={character}\n                discardedCards={discardedCards}\n                handleMoveCardsBackToHand={handleMoveCardsBackToHand}\n                moveDiscardedCardsToLost={moveDiscardedCardsToLost}\n                removeCardFromDiscard={removeCardFromDiscard}\n              />\n              <LostCards\n                character={character}\n                lostCards={lostCards}\n                moveLostCardToHand={moveLostCardToHand}\n              />\n            </tr>\n          </tbody>\n        </table>\n        {showPlayerStats && <PlayerStats character={character} level={level} />}\n      </div>\n      <HandCards\n        character={character}\n        hand={hand}\n        moveHandCardToLost={moveHandCardToLost}\n        moveThirdCardToChosen={moveThirdCardToChosen}\n        moveCardsToChosen={moveCardsToChosen}\n        hasCardsInPlay={hasCardsInPlay}\n        staffOfCommand={staffOfCommand}\n        staffOfCommandPlayed={Object.keys(chosenCards[2]).length === 0 ? false : true}\n      />\n    </>\n  )\n}\n\nfunction DiscardedCards({\n  character,\n  discardedCards,\n  handleMoveCardsBackToHand,\n  moveDiscardedCardsToLost,\n  removeCardFromDiscard,\n}) {\n  const [selectedCards, setSelectedCards] = useState([])\n  const [resting, setResting] = useState(false)\n  const [canRerollLost, setCanRerollLost] = useState(false)\n  const [longResting, setLongResting] = useState(false)\n  const [cardToLose, setCardToLose] = useState({})\n  const firstRow = discardedCards.slice(0, 5)\n  const secondRow = discardedCards.slice(5, 10)\n  const thirdRow = discardedCards.slice(10, 15)\n\n  function handleOnClick(cardClicked) {\n    while (cardClicked.className === 'enhancement-icon') {\n      cardClicked = cardClicked.previousSibling\n    }\n    if (cardClicked.className === 'discarded') {\n      cardClicked = cardClicked.firstChild\n    }\n    let characterCard = character.cards.find(\n      (card) => card.title === cardClicked.alt\n    )\n    if (longResting) {\n      setCardToLose(characterCard)\n    } else {\n      if (selectedCards.some((card) => card.title === cardClicked.alt)) {\n        let newSelection = [...selectedCards]\n        _.remove(newSelection, characterCard)\n        setSelectedCards(newSelection)\n      } else {\n        if (selectedCards.length < 2) {\n          setSelectedCards([...selectedCards, characterCard])\n        } else {\n          let newSelection = [...selectedCards]\n          newSelection.shift()\n          newSelection.push(characterCard)\n          setSelectedCards(newSelection)\n        }\n      }\n    }\n  }\n\n  function cardSelected(cardClicked) {\n    if (selectedCards.some((card) => card.title === cardClicked.title)) {\n      return true\n    }\n    return false\n  }\n\n  function handleRecoverDiscardedCard() {\n    handleMoveCardsBackToHand(selectedCards)\n    removeCardFromDiscard(selectedCards[0])\n    setSelectedCards([])\n  }\n\n  function handleLoseCardsAvoidingDamage(cards) {\n    moveDiscardedCardsToLost(cards, false)\n    setSelectedCards([])\n  }\n\n  function handleShortRest() {\n    setResting(true)\n    let cardToLose =\n      discardedCards[Math.floor(Math.random() * discardedCards.length)]\n    setCardToLose(cardToLose)\n    setCanRerollLost(true)\n  }\n\n  function handleLoseCardFromRest() {\n    moveDiscardedCardsToLost([cardToLose], true)\n    setResting(false)\n    setCanRerollLost(false)\n    setCardToLose({})\n    setLongResting(false)\n  }\n\n  function handleRerollLostCard() {\n    let cardsToChooseFrom = [...discardedCards]\n    _.remove(cardsToChooseFrom, cardToLose)\n    let newCardToLose =\n      cardsToChooseFrom[Math.floor(Math.random() * cardsToChooseFrom.length)]\n    setCardToLose(newCardToLose)\n    setCanRerollLost(false)\n  }\n\n  function handleLongRest() {\n    setLongResting(true)\n  }\n\n  function cardBoarder(card) {\n    if (card === cardToLose && resting) {\n      return 'chooseCards must-lose'\n    } else if (card === cardToLose && longResting) {\n      return 'chooseCards discard-selected'\n    }\n    return 'chooseCards'\n  }\n\n  return (\n    <td\n      id=\"discarded-cards-title\"\n      colSpan=\"2\"\n      style={{ border: '1px solid white', textAlign: 'center' }}\n    >\n      Discarded Cards\n      {longResting && <p id=\"choose-to-lose\">Choose One Card to Lose</p>}\n      <table id=\"discard-table\">\n        <tbody>\n          <tr>\n            {firstRow.map((card) => (\n              <CardContainer\n                card={card}\n                cardClass={cardBoarder(card)}\n                containerClass={'discarded'}\n                cardSelected={cardSelected}\n                character={character}\n                key={card.title}\n                mustLose={card === cardToLose && resting}\n                onClick={handleOnClick}\n              />\n            ))}\n          </tr>\n          <tr>\n            {secondRow.map((card) => (\n              <CardContainer\n                card={card}\n                cardClass={cardBoarder(card)}\n                containerClass={'discarded'}\n                cardSelected={cardSelected}\n                character={character}\n                key={card.title}\n                mustLose={card === cardToLose && resting}\n                onClick={handleOnClick}\n              />\n            ))}\n          </tr>\n          <tr>\n            {thirdRow.map((card) => (\n              <CardContainer\n                card={card}\n                cardClass={cardBoarder(card)}\n                containerClass={'discarded'}\n                cardSelected={cardSelected}\n                character={character}\n                key={card.title}\n                mustLose={card === cardToLose && resting}\n                onClick={handleOnClick}\n              />\n            ))}\n          </tr>\n        </tbody>\n      </table>\n      <button\n        id=\"short-rest-button\"\n        disabled={discardedCards.length < 2 || resting || longResting}\n        className=\"button\"\n        onClick={() => handleShortRest()}\n        type=\"button\"\n        title=\"Must Have At Least 2 Discarded Cards And No Cards in Play\"\n      >\n        Short Rest\n      </button>\n      <button\n        id=\"long-rest-button\"\n        disabled={discardedCards.length < 2 || resting || longResting}\n        className=\"button\"\n        onClick={() => handleLongRest()}\n        type=\"button\"\n        title=\"Must Have At Least 2 Discarded Cards And No Cards in Play\"\n      >\n        Long Rest\n      </button>\n      <button\n        id=\"recover-discard-button\"\n        disabled={selectedCards.length !== 1 || resting || longResting}\n        className=\"button\"\n        onClick={() => handleRecoverDiscardedCard(selectedCards[0])}\n        type=\"button\"\n        title=\"Must Have A Discarded Card Selected\"\n      >\n        Recover Discarded Card\n      </button>\n      <br />\n      <button\n        id=\"lose-discard-button\"\n        className=\"button\"\n        disabled={Object.keys(cardToLose).length === 0}\n        onClick={() => handleLoseCardFromRest()}\n        type=\"button\"\n        title=\"Must Be Resting\"\n      >\n        Lose Card From Rest\n      </button>\n      <button\n        id=\"reroll-random-card-button\"\n        className=\"button\"\n        disabled={!canRerollLost}\n        onClick={() => handleRerollLostCard()}\n        type=\"button\"\n        title=\"Can Only Be Used Once Per Short Rest\"\n      >\n        Reroll Lost Card\n      </button>\n      <button\n        id=\"lose-discard-button2\"\n        className=\"button\"\n        disabled={selectedCards.length !== 2}\n        onClick={() => handleLoseCardsAvoidingDamage(selectedCards)}\n        type=\"button\"\n        title=\"Must Have A Discarded Card Selected - Must Lose 2 to Avoid Damage\"\n      >\n        Lose Cards To Avoid Damage\n      </button>\n    </td>\n  )\n}\n\nfunction ActiveCards({\n  character,\n  activeCards,\n  moveActiveCardToDiscard,\n  moveActiveCardToLost,\n}) {\n  const [selectedCard, setSelectedCard] = useState({})\n  const firstRow = activeCards.slice(0, 3)\n  const secondRow = activeCards.slice(3, 6)\n\n  function cardSelected(card) {\n    if (selectedCard === card) {\n      return true\n    }\n    return false\n  }\n\n  function handleCardClick(cardClicked) {\n    if (cardClicked.tagName === 'BUTTON' || cardClicked.tagName === 'BR') {\n      return\n    }\n    while (cardClicked.className === 'enhancement-icon') {\n      cardClicked = cardClicked.previousSibling\n    }\n    if (cardClicked.className === 'active-card') {\n      cardClicked = cardClicked.firstChild\n    }\n    let cardToSelect = character.cards.find(\n      (card) => card.title === cardClicked.alt\n    )\n    cardToSelect === selectedCard\n      ? setSelectedCard({})\n      : setSelectedCard(cardToSelect)\n  }\n\n  function handleDiscardCard(card) {\n    moveActiveCardToDiscard(card)\n    setSelectedCard({})\n  }\n\n  function handleLoseCard(card) {\n    moveActiveCardToLost(card)\n    setSelectedCard({})\n  }\n\n  return (\n    <td\n      id=\"active-cards-title\"\n      colSpan=\"2\"\n      style={{ border: '1px solid white', textAlign: 'center' }}\n    >\n      Active Cards\n      <br />\n      <table id=\"active-table\" align=\"center\">\n        <tbody>\n          <tr>\n            {firstRow.map((card) => (\n              <CardContainer\n                card={card}\n                cardClass={'chooseCards'}\n                containerClass={'active-card'}\n                cardSelected={cardSelected}\n                character={character}\n                key={card.title}\n                onClick={handleCardClick}\n              />\n            ))}\n          </tr>\n          <tr>\n            {secondRow.map((card) => (\n              <CardContainer\n                card={card}\n                cardClass={'chooseCards'}\n                containerClass={'active-card'}\n                cardSelected={cardSelected}\n                character={character}\n                key={card.title}\n                onClick={handleCardClick}\n              />\n            ))}\n          </tr>\n        </tbody>\n      </table>\n      <button\n        id=\"discard-active-card\"\n        className=\"button tooltip\"\n        disabled={Object.keys(selectedCard).length === 0}\n        onClick={() => handleDiscardCard(selectedCard)}\n        type=\"button\"\n        title=\"Must Have an Active Card Selected\"\n      >\n        Discard Active Card\n      </button>\n      <button\n        id=\"lose-active-card\"\n        className=\"button tooltip\"\n        disabled={Object.keys(selectedCard).length === 0}\n        onClick={() => handleLoseCard(selectedCard)}\n        type=\"button\"\n        title=\"Must Have an Active Card Selected\"\n      >\n        Lose Active Card\n      </button>\n      <br />\n    </td>\n  )\n}\n\nfunction LostCards({ character, lostCards, moveLostCardToHand }) {\n  const [selectedCard, setSelectedCard] = useState({})\n  const firstRow = lostCards.slice(0, 5)\n  const secondRow = lostCards.slice(5, 10)\n  const thirdRow = lostCards.slice(10, 15)\n\n  function cardSelected(card) {\n    if (selectedCard === card) {\n      return true\n    }\n    return false\n  }\n\n  function handleOnClick(cardClicked) {\n    while (cardClicked.className === 'enhancement-icon') {\n      cardClicked = cardClicked.previousSibling\n    }\n    if (cardClicked.className === 'lost') {\n      cardClicked = cardClicked.firstChild\n    }\n    let cardToSelect = character.cards.find(\n      (card) => card.title === cardClicked.alt\n    )\n    cardToSelect === selectedCard\n      ? setSelectedCard({})\n      : setSelectedCard(cardToSelect)\n  }\n\n  function handleRecoverLostCard(card) {\n    moveLostCardToHand(card)\n    setSelectedCard({})\n  }\n\n  return (\n    <td\n      id=\"lost-cards-title\"\n      colSpan=\"2\"\n      style={{ border: '1px solid white', textAlign: 'center' }}\n    >\n      Lost Cards\n      <br />\n      <table id=\"lost-table\">\n        <tbody>\n          <tr>\n            {firstRow.map((card) => (\n              <CardContainer\n                card={card}\n                cardClass={'chooseCards'}\n                containerClass={'lost'}\n                cardSelected={cardSelected}\n                character={character}\n                key={card.title}\n                onClick={handleOnClick}\n              />\n            ))}\n          </tr>\n          <tr>\n            {secondRow.map((card) => (\n              <CardContainer\n                card={card}\n                cardClass={'chooseCards'}\n                containerClass={'lost'}\n                cardSelected={cardSelected}\n                character={character}\n                key={card.title}\n                onClick={handleOnClick}\n              />\n            ))}\n          </tr>\n          <tr>\n            {thirdRow.map((card) => (\n              <CardContainer\n                card={card}\n                cardClass={'chooseCards'}\n                containerClass={'lost'}\n                cardSelected={cardSelected}\n                character={character}\n                key={card.title}\n                onClick={handleOnClick}\n              />\n            ))}\n          </tr>\n        </tbody>\n      </table>\n      <button\n        id=\"recover-lost\"\n        className=\"button\"\n        disabled={Object.keys(selectedCard).length === 0}\n        onClick={() => handleRecoverLostCard(selectedCard)}\n        type=\"button\"\n        title=\"Must Have a Lost Card Selected\"\n      >\n        Recover Lost Card\n      </button>\n    </td>\n  )\n}\n\nfunction SettingsMenu({ setPlayerStats }) {\n  return (\n    <>\n      <StackView>\n        <Text>Settings</Text>\n        <CheckboxCard\n          onChange={(e) => setPlayerStats(e.target.checked)}\n          key=\"stats\"\n          title=\"Player Stats\"\n        />\n      </StackView>\n    </>\n  )\n}\n\nexport default PlayArea\n","import './App.css'\n\nimport {\n  Button,\n  Field,\n  Input,\n  Select,\n  StackView,\n  TextArea,\n  ThemeProvider,\n} from '@planning-center/ui-kit'\nimport React, { useEffect, useState } from 'react'\n\nimport CharacterSelection from './CharacterSelection'\nimport CookieConsent from 'react-cookie-consent'\nimport Cookies from 'universal-cookie'\nimport HandSelection from './HandSelection'\nimport PerkSelection from './PerkSelection'\nimport PlayArea from './PlayArea'\nimport _ from 'lodash'\n\nfunction App() {\n  const [stage, setStage] = useState('selectCharacter')\n  const [game, setGame] = useState('gloomhaven')\n  const [campaign, setCampaign] = useState(1)\n  const [character, setCharacter] = useState({})\n  const [level, setLevel] = useState(1)\n  const [hand, setHand] = useState([])\n  const [modifierDeck, setModifierDeck] = useState([\n    {\n      name: 'plus0',\n      image: './images/attack-modifiers/base/player/am-plus0.png',\n    },\n    {\n      name: 'plus0',\n      image: './images/attack-modifiers/base/player/am-plus0.png',\n    },\n    {\n      name: 'plus0',\n      image: './images/attack-modifiers/base/player/am-plus0.png',\n    },\n    {\n      name: 'plus0',\n      image: './images/attack-modifiers/base/player/am-plus0.png',\n    },\n    {\n      name: 'plus0',\n      image: './images/attack-modifiers/base/player/am-plus0.png',\n    },\n    {\n      name: 'plus0',\n      image: './images/attack-modifiers/base/player/am-plus0.png',\n    },\n    {\n      name: 'plus1',\n      image: './images/attack-modifiers/base/player/am-plus1.png',\n    },\n    {\n      name: 'plus1',\n      image: './images/attack-modifiers/base/player/am-plus1.png',\n    },\n    {\n      name: 'plus1',\n      image: './images/attack-modifiers/base/player/am-plus1.png',\n    },\n    {\n      name: 'plus1',\n      image: './images/attack-modifiers/base/player/am-plus1.png',\n    },\n    {\n      name: 'plus1',\n      image: './images/attack-modifiers/base/player/am-plus1.png',\n    },\n    {\n      name: 'minus1',\n      image: './images/attack-modifiers/base/player/am-minus1.png',\n    },\n    {\n      name: 'minus1',\n      image: './images/attack-modifiers/base/player/am-minus1.png',\n    },\n    {\n      name: 'minus1',\n      image: './images/attack-modifiers/base/player/am-minus1.png',\n    },\n    {\n      name: 'minus1',\n      image: './images/attack-modifiers/base/player/am-minus1.png',\n    },\n    {\n      name: 'minus1',\n      image: './images/attack-modifiers/base/player/am-minus1.png',\n    },\n    {\n      name: 'minus2',\n      image: './images/attack-modifiers/base/player/am-minus2.png',\n    },\n    {\n      name: 'plus1',\n      image: './images/attack-modifiers/base/player/am-plus2.png',\n    },\n    {\n      name: 'miss',\n      image: './images/attack-modifiers/base/player/am-miss.png',\n    },\n    {\n      name: 'times2',\n      image: './images/attack-modifiers/base/player/am-x2.png',\n    },\n  ])\n\n  const [staffOfCommand, setStaffOfCommand] = useState(false)\n  const allCharacterData = getGameCharacters(game)\n  const cookies = new Cookies()\n\n  // Load the game selected from the cookie if possible\n  useEffect(() => {\n    let cookieInfo = cookies.getAll()\n    if (cookieInfo.game) {\n      setGame(cookieInfo.game)\n    }\n    if (cookieInfo.hand) {\n      setHand(cookieInfo.hand)\n    }\n    if (cookieInfo.campaign) {\n      setCampaign(parseInt(cookieInfo.campaign))\n    }\n  }, [])\n\n  useEffect(() => {\n    if (characterSelected && game === 'jotl') {\n      let characterData = allCharacterData.find(\n        (x) => x.name === character.name\n      ).campaignVersions[campaign - 1]\n\n      if (\n        game === 'jotl' &&\n        (campaign === 1 || campaign === 2 || campaign === 3)\n      ) {\n        setHand(characterData.cards)\n      } else if (game === 'jotl') {\n        setHand([])\n      }\n\n      cookies.set('campaign', campaign, {\n        path: '/',\n        maxAge: 31104000,\n      })\n\n      setCharacter(characterData)\n    }\n  }, [campaign])\n\n  function getGameCharacters(gameName) {\n    if (gameName === 'gloomhaven') {\n      return require('./gloomhavenCharacterData.json')\n    } else if (gameName === 'forgottenCircles') {\n      return require(`./forgottenCirclesCharacterData.json`)\n    } else if (gameName === 'jotl') {\n      return require(`./jawsOfTheLionCharacterData.json`)\n    }\n  }\n\n  const characterSelected = !_.isEmpty(character)\n\n  function changeGame(gameName) {\n    setGame(gameName)\n  }\n\n  function handleSetStage(stage) {\n    setStage(stage)\n  }\n\n  function handleSetCharacter(characterName) {\n    // Set game info in cookie for retrieval the next time they visit the site.\n    cookies.set('game', game, {\n      path: '/',\n      maxAge: 31104000,\n    })\n\n    let characterData =\n      game === 'jotl'\n        ? allCharacterData.find((x) => x.name === characterName)\n            .campaignVersions[campaign - 1]\n        : allCharacterData.find((x) => x.name === characterName)\n\n    if (characterName !== cookies.get('character')) {\n      cookies.remove('perks')\n      cookies.remove('modifierChanges')\n      cookies.remove('hand')\n      setHand([])\n    }\n    cookies.set('character', characterData.name, {\n      path: '/',\n      maxAge: 31104000,\n    })\n\n    if (\n      game === 'jotl' &&\n      (campaign === 1 || campaign === 2 || campaign === 3)\n    ) {\n      setHand(characterData.cards)\n    } else if (game === 'jotl') {\n      setHand([])\n    }\n    setCharacter(characterData, setStage('selectPerks'))\n  }\n\n  function handleUpdateCharacter(character) {\n    setCharacter(character)\n  }\n\n  function handleSetLevel(level) {\n    cookies.set('level', level, { maxAge: 31104000 })\n    setLevel(level)\n  }\n\n  function addCardToHand(cardToAdd) {\n    setHand([...hand, cardToAdd])\n  }\n\n  function removeCardFromHand(cardReceived) {\n    let cardToRemove = hand.find((card) => card.title === cardReceived.title)\n    let previousHand = [...hand]\n    let newHand = _.reject(previousHand, ['title', cardToRemove.title])\n    setHand(newHand)\n  }\n\n  function modifyModifierDeck(cardsToRemove, cardsToAdd) {\n    // Function to find index for cards to remove\n    function findWithAttr(array, attr, value) {\n      for (var i = 0; i < array.length; i++) {\n        if (array[i][attr] === value) {\n          return i\n        }\n      }\n      return -1\n    }\n\n    // Add cards to modifier deck\n    let newModifierDeck = modifierDeck.concat(cardsToAdd)\n\n    // Remove cards from modifier deck\n    let modifierWithCardsRemoved = [...newModifierDeck]\n    cardsToRemove.forEach((card) => {\n      let index = findWithAttr(modifierWithCardsRemoved, 'name', card.name)\n      modifierWithCardsRemoved.splice(index, 1)\n    })\n\n    // Shuffle new deck\n    for (let i = modifierWithCardsRemoved.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * i)\n      const temp = modifierWithCardsRemoved[i]\n      modifierWithCardsRemoved[i] = modifierWithCardsRemoved[j]\n      modifierWithCardsRemoved[j] = temp\n    }\n\n    // Set state with new deck\n    setModifierDeck(modifierWithCardsRemoved)\n  }\n\n  function handleStaffOfCommand(selected) {\n    setStaffOfCommand(selected)\n  }\n\n  function resetModifierDeck() {\n    setModifierDeck([\n      {\n        name: 'plus0',\n        image: './images/attack-modifiers/base/player/am-plus0.png',\n      },\n      {\n        name: 'plus0',\n        image: './images/attack-modifiers/base/player/am-plus0.png',\n      },\n      {\n        name: 'plus0',\n        image: './images/attack-modifiers/base/player/am-plus0.png',\n      },\n      {\n        name: 'plus0',\n        image: './images/attack-modifiers/base/player/am-plus0.png',\n      },\n      {\n        name: 'plus0',\n        image: './images/attack-modifiers/base/player/am-plus0.png',\n      },\n      {\n        name: 'plus0',\n        image: './images/attack-modifiers/base/player/am-plus0.png',\n      },\n      {\n        name: 'plus1',\n        image: './images/attack-modifiers/base/player/am-plus1.png',\n      },\n      {\n        name: 'plus1',\n        image: './images/attack-modifiers/base/player/am-plus1.png',\n      },\n      {\n        name: 'plus1',\n        image: './images/attack-modifiers/base/player/am-plus1.png',\n      },\n      {\n        name: 'plus1',\n        image: './images/attack-modifiers/base/player/am-plus1.png',\n      },\n      {\n        name: 'plus1',\n        image: './images/attack-modifiers/base/player/am-plus1.png',\n      },\n      {\n        name: 'minus1',\n        image: './images/attack-modifiers/base/player/am-minus1.png',\n      },\n      {\n        name: 'minus1',\n        image: './images/attack-modifiers/base/player/am-minus1.png',\n      },\n      {\n        name: 'minus1',\n        image: './images/attack-modifiers/base/player/am-minus1.png',\n      },\n      {\n        name: 'minus1',\n        image: './images/attack-modifiers/base/player/am-minus1.png',\n      },\n      {\n        name: 'minus1',\n        image: './images/attack-modifiers/base/player/am-minus1.png',\n      },\n      {\n        name: 'minus2',\n        image: './images/attack-modifiers/base/player/am-minus2.png',\n      },\n      {\n        name: 'plus1',\n        image: './images/attack-modifiers/base/player/am-plus2.png',\n      },\n      {\n        name: 'miss',\n        image: './images/attack-modifiers/base/player/am-miss.png',\n      },\n      {\n        name: 'times2',\n        image: './images/attack-modifiers/base/player/am-x2.png',\n      },\n    ])\n  }\n\n  return (\n    <>\n      {stage === 'selectCharacter' && (\n        <>\n          <CharacterSelection\n            availableCharacters={allCharacterData}\n            changeGame={changeGame}\n            game={game}\n            handleSetCharacter={handleSetCharacter}\n            handleSetLevel={handleSetLevel}\n            handleStaffOfCommand={handleStaffOfCommand}\n            level={level}\n          />\n        </>\n      )}\n      {stage === 'selectPerks' && (\n        <PerkSelection\n          modifyModifierDeck={modifyModifierDeck}\n          character={character}\n          characterPerks={character.perks}\n          handleSetStage={handleSetStage}\n          resetModifierDeck={resetModifierDeck}\n        />\n      )}\n      {stage === 'selectHand' && (\n        <HandSelection\n          addCardToHand={addCardToHand}\n          character={character}\n          game={game}\n          level={level}\n          hand={hand}\n          handleUpdateCharacter={handleUpdateCharacter}\n          handleSetStage={handleSetStage}\n          removeCardFromHand={removeCardFromHand}\n          {...{ campaign, setCampaign }}\n        />\n      )}\n      {stage === 'playing' && (\n        <PlayArea\n          character={character}\n          hand={hand}\n          level={level}\n          modifierDeck={modifierDeck}\n          setHand={setHand}\n          staffOfCommand={staffOfCommand}\n        />\n      )}\n      <Feedback />\n      <CookieConsent>\n        This website uses cookies to save your selected preferences.\n      </CookieConsent>\n    </>\n  )\n}\n\nfunction Feedback() {\n  const [displayModal, setDisplayModal] = useState(false)\n\n  function handleSubmitFeedback() {\n    setDisplayModal(true)\n  }\n\n  function hideModal() {\n    setDisplayModal(false)\n  }\n\n  return (\n    <div className='footer'>\n      <p>\n        Did you run into a bug or do you have some feedback about the app? I'd\n        love to hear about it!\n      </p>\n      <button onClick={handleSubmitFeedback}>Submit Feedback</button>\n      <FeedbackModal show={displayModal} hideModal={hideModal} />\n    </div>\n  )\n}\n\nfunction FeedbackModal({ show, hideModal }) {\n  const style = show ? { display: 'block' } : { display: 'none' }\n  const [title, setTitle] = useState('')\n  const [type, setType] = useState('')\n  const [body, setBody] = useState('')\n  const [submitted, setSubmitted] = useState(false)\n  const [submissionError, setSubmissionError] = useState(false)\n  const [showErrors, setShowErrors] = useState(false)\n  const { Octokit } = require('@octokit/rest')\n  const octokit = new Octokit({\n    auth: process.env.REACT_APP_GITHUB_KEY,\n  })\n\n  function handleSubmitForm() {\n    if (title !== '' && type !== '' && body !== '') {\n      setShowErrors(false)\n      setSubmitted(true)\n      octokit.issues\n        .create({\n          owner: 'nicholaskillin',\n          repo: 'gloomhaven-hand-manager',\n          title: title,\n          body: body,\n          labels: [type],\n        })\n        .catch((err) => {\n          setSubmissionError(true)\n          return\n        })\n    } else {\n      setShowErrors(true)\n    }\n  }\n\n  return (\n    <div id='zoomModal' style={style}>\n      <div id='zoomFeedbackContent'>\n        <span className='close' onClick={hideModal}>\n          &times;\n        </span>\n        <h1>Feedback</h1>\n        {showErrors && (\n          <h1 style={{ color: 'red' }}>Please fill out all fields</h1>\n        )}\n        {!submitted && (\n          <ThemeProvider>\n            <StackView spacing={1}>\n              <Field\n                inline\n                label='Subject'\n                helpContent='Brief sentence describing the feedback'\n              >\n                <Input\n                  onChange={({ target }) => setTitle(target.value)}\n                  style={{ color: 'black' }}\n                />\n              </Field>\n              <Field\n                inline\n                label='Type'\n                helpContent='Is this a bug or a feature request?'\n              >\n                <Select\n                  emptyValue='Bug or Feature Request?'\n                  tooltip={{ title: 'Bug or Feature Request' }}\n                  onChange={(e) => setType(e.value)}\n                  style={{ color: 'black' }}\n                >\n                  <Select.Option value='bug'>Bug</Select.Option>\n                  <Select.Option value='enhancement'>\n                    Feature Request\n                  </Select.Option>\n                </Select>\n              </Field>\n              <Field\n                inline\n                label='Description'\n                helpContent='Please be detailed here if you found a bug. The more details the better.'\n              >\n                <TextArea\n                  onChange={({ target }) => setBody(target.value)}\n                  style={{ color: 'black', height: '200px' }}\n                  placeholder='Please include as many details as you can for bugs'\n                />\n              </Field>\n              <Field inline>\n                <Button onClick={handleSubmitForm}>Submit</Button>\n              </Field>\n            </StackView>\n          </ThemeProvider>\n        )}\n        {submitted && !submissionError && (\n          <h1>Thank you for your submission!</h1>\n        )}\n        {submissionError && (\n          <p>\n            Welp, seems like there was an issue sending your feedback. You can\n            visit the{' '}\n            <a\n              href='https://github.com/nicholaskillin/gloomhaven-hand-manager/issues'\n              target='_blank'\n            >\n              Github Repo\n            </a>{' '}\n            to provide that feedback if you'd like.\n          </p>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport * as serviceWorker from './serviceWorker'\n\nimport App from './App'\nimport Bugsnag from '@bugsnag/js'\nimport BugsnagPluginReact from '@bugsnag/plugin-react'\nimport Cookies from 'universal-cookie'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\n// Instantiate and start Bugsnag\nBugsnag.start({\n  apiKey: process.env.REACT_APP_BUGSNAG_KEY,\n  enabledReleaseStages: ['production', 'staging'],\n  plugins: [new BugsnagPluginReact()],\n  onError: function (event) {\n    // Grab cookie data to help track down the issue\n    const cookies = new Cookies()\n    let cookieInfo = cookies.getAll()  \n\n    event.addMetadata('cookies', {\n      ...cookieInfo\n    })\n  }\n})\n\nvar ErrorBoundary = Bugsnag.getPlugin('react').createErrorBoundary(React)\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary FallbackComponent={FallbackComponent}>\n      <App />\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nfunction FallbackComponent() {\n  return <p>Looks like you've hit a bug. Information about this has already been sent and I will look into it. For now, you can refresh the page to get things set back up.</p>\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}